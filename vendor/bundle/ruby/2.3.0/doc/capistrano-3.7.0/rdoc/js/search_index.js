var search_data = {"index":{"searchIndex":["capistrano","application","configuration","emptyfilter","filter","hostfilter","nullfilter","plugininstaller","question","rolefilter","scmresolver","server","properties","servers","validatedvariables","validatedquestion","variables","dsl","env","paths","stages","doctor","environmentdoctor","gemsdoctor","outputhelpers","row","serversdoctor","rolewhitespacechecker","serverdecorator","variablesdoctor","immutabletask","plugin","prochelpers","scm","git","hg","plugin","svn","taskenhancements","uploadtask","validationerror","versionvalidator","object","rake","<<()","[]()","add_cmdline_filter()","add_filter()","add_host()","add_property()","add_role()","add_role()","add_roles()","after()","all_gem_names()","any?()","any_has_whitespace?()","append()","archive_to_release_path()","archive_to_release_path()","archive_to_release_path()","ask()","ask_question()","assert_valid_later()","assert_valid_now()","assert_valid_stage_names()","assert_value_or_block_not_both()","asset_timestamp()","asset_timestamp()","available()","backend()","backend()","backtrace_pattern()","before()","built_in_scm_name?()","built_in_scm_plugin_class_name()","calculate_column_widths()","call()","call()","call()","call()","call()","call()","callable_without_parameters?()","capfile()","check()","check_repo_is_reachable()","check_repo_is_reachable()","check_repo_is_reachable()","clone()","clone_repo()","clone_repo()","clone_repo()","cmdline_filters()","collect_rows()","color()","configure_backend()","configure_scm()","configure_sshkit_output()","core_gem_names()","current_path()","current_version()","default_tasks()","define_remote_file_task()","define_tasks()","define_tasks()","define_tasks()","define_tasks()","delete()","deploy_config_path()","deploy_path()","deploy_to()","deploying?()","display_error_message()","dry_run()","dry_run?()","each()","echo?()","enhance()","ensure_stage()","env()","env()","eval_rakefile()","execute()","exit_because_of_exception()","exit_deploy_because_of_exception()","extended()","extract_options()","fetch()","fetch()","fetch()","fetch_for()","fetch_primary()","fetch_revision()","fetch_revision()","fetch_revision()","fetch_revision()","filter()","filter()","filter()","filter()","filter()","filter()","find_whitespace_roles()","gets()","git()","handle_options()","has_role?()","hg()","hostfilter()","include_whitespace?()","inspect_all_values()","install()","install_plugin()","installed_gem_version()","installer()","invoke()","is_question?()","join_paths()","keys()","keys()","linked_dir_parents()","linked_dirs()","linked_file_dirs()","linked_files()","load_built_in_scm()","load_imports()","load_legacy_scm_by_name()","local_user()","location()","lock()","lvalue()","map_dirnames()","match?()","matches?()","method_missing()","name()","needed?()","netssh_options()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","now()","on()","peek()","plugin_gem_names()","pretty_inspect()","primary()","primary()","print_config_variables()","print_deprecation_warnings_if_applicable()","properties()","properties()","provides_scm?()","puts()","question()","regex_matcher()","regex_matcher()","register_hooks()","register_hooks()","register_hooks()","register_hooks()","register_legacy_scm_hooks()","release()","release_path()","release_path()","release_roles()","release_timestamp()","releases_path()","remember_location()","remove()","repo_mirror_exists?()","repo_mirror_exists?()","repo_mirror_exists?()","repo_path()","repo_path()","repo_url()","repo_url()","requested()","reset!()","resolve()","respond_to_missing?()","response()","revision_log()","revision_log_message()","role()","role_properties()","role_properties_for()","role_properties_for()","roles()","roles()","roles()","roles()","roles=()","roles_array()","roles_for()","roles_for()","rollback_log_message()","run()","run_locally()","scm()","scm?()","scm_installed?()","scm_name()","scm_plugin_installed?()","select?()","server()","servers()","servers()","set()","set()","set()","set_defaults()","set_defaults()","set_if_empty()","set_release_path()","setup_filters()","shared_path()","sort_options()","source_locations()","stage_config_path()","stage_definitions()","stage_set?()","stages()","sudo()","suspicious_keys()","svn()","t()","table()","tasks_without_stage_dependency()","test()","test!()","third_party_scm_name?()","timestamp()","title()","to_h()","top_level_tasks()","trace_set()","trusted?()","trusted_keys()","untrusted!()","untrusted_keys()","unused_keys()","update()","update_available?()","update_mirror()","update_mirror()","update_mirror()","uri_form()","using_default_scm?()","validate()","value_or_default()","variables()","verify()","version()","warn_add_git_to_capfile()","warn_set_scm_is_deprecated()","warn_third_party_scm_must_be_upgraded()","warning()","whitespace_roles_decorated()","with()","yellow()","capfile","git.rake","hg.rake","svn.rake","console.rake","deploy.rake","doctor.rake","framework.rake","install.rake","capfile"],"longSearchIndex":["capistrano","capistrano::application","capistrano::configuration","capistrano::configuration::emptyfilter","capistrano::configuration::filter","capistrano::configuration::hostfilter","capistrano::configuration::nullfilter","capistrano::configuration::plugininstaller","capistrano::configuration::question","capistrano::configuration::rolefilter","capistrano::configuration::scmresolver","capistrano::configuration::server","capistrano::configuration::server::properties","capistrano::configuration::servers","capistrano::configuration::validatedvariables","capistrano::configuration::validatedvariables::validatedquestion","capistrano::configuration::variables","capistrano::dsl","capistrano::dsl::env","capistrano::dsl::paths","capistrano::dsl::stages","capistrano::doctor","capistrano::doctor::environmentdoctor","capistrano::doctor::gemsdoctor","capistrano::doctor::outputhelpers","capistrano::doctor::outputhelpers::row","capistrano::doctor::serversdoctor","capistrano::doctor::serversdoctor::rolewhitespacechecker","capistrano::doctor::serversdoctor::serverdecorator","capistrano::doctor::variablesdoctor","capistrano::immutabletask","capistrano::plugin","capistrano::prochelpers","capistrano::scm","capistrano::scm::git","capistrano::scm::hg","capistrano::scm::plugin","capistrano::scm::svn","capistrano::taskenhancements","capistrano::uploadtask","capistrano::validationerror","capistrano::versionvalidator","object","rake","capistrano::doctor::outputhelpers::row#<<()","capistrano::configuration::server::[]()","capistrano::configuration#add_cmdline_filter()","capistrano::configuration#add_filter()","capistrano::configuration::servers#add_host()","capistrano::configuration::server#add_property()","capistrano::configuration::server#add_role()","capistrano::configuration::servers#add_role()","capistrano::configuration::server#add_roles()","capistrano::taskenhancements#after()","capistrano::doctor::gemsdoctor#all_gem_names()","capistrano::configuration#any?()","capistrano::doctor::serversdoctor::rolewhitespacechecker#any_has_whitespace?()","capistrano::configuration#append()","capistrano::scm::git#archive_to_release_path()","capistrano::scm::hg#archive_to_release_path()","capistrano::scm::svn#archive_to_release_path()","capistrano::configuration#ask()","capistrano::configuration::question#ask_question()","capistrano::configuration::validatedvariables#assert_valid_later()","capistrano::configuration::validatedvariables#assert_valid_now()","capistrano::dsl::stages#assert_valid_stage_names()","capistrano::configuration::validatedvariables#assert_value_or_block_not_both()","capistrano::dsl::env#asset_timestamp()","capistrano::dsl::paths#asset_timestamp()","capistrano::versionvalidator#available()","capistrano::configuration#backend()","capistrano::plugin#backend()","capistrano::application#backtrace_pattern()","capistrano::taskenhancements#before()","capistrano::configuration::scmresolver#built_in_scm_name?()","capistrano::configuration::scmresolver#built_in_scm_plugin_class_name()","capistrano::doctor::outputhelpers#calculate_column_widths()","capistrano::configuration::question#call()","capistrano::configuration::validatedvariables::validatedquestion#call()","capistrano::doctor::environmentdoctor#call()","capistrano::doctor::gemsdoctor#call()","capistrano::doctor::serversdoctor#call()","capistrano::doctor::variablesdoctor#call()","capistrano::prochelpers#callable_without_parameters?()","capistrano::application#capfile()","capistrano::scm#check()","capistrano::scm::git#check_repo_is_reachable()","capistrano::scm::hg#check_repo_is_reachable()","capistrano::scm::svn#check_repo_is_reachable()","capistrano::scm#clone()","capistrano::scm::git#clone_repo()","capistrano::scm::hg#clone_repo()","capistrano::scm::svn#clone_repo()","capistrano::configuration#cmdline_filters()","capistrano::doctor::outputhelpers#collect_rows()","capistrano::doctor::outputhelpers#color()","capistrano::configuration#configure_backend()","capistrano::configuration#configure_scm()","capistrano::configuration#configure_sshkit_output()","capistrano::doctor::gemsdoctor#core_gem_names()","capistrano::dsl::paths#current_path()","capistrano::versionvalidator#current_version()","capistrano::taskenhancements#default_tasks()","capistrano::taskenhancements#define_remote_file_task()","capistrano::plugin#define_tasks()","capistrano::scm::git#define_tasks()","capistrano::scm::hg#define_tasks()","capistrano::scm::svn#define_tasks()","capistrano::configuration::variables#delete()","capistrano::dsl::paths#deploy_config_path()","capistrano::dsl::paths#deploy_path()","capistrano::dsl::paths#deploy_to()","capistrano::taskenhancements#deploying?()","capistrano::application#display_error_message()","capistrano::application#dry_run()","capistrano::configuration#dry_run?()","capistrano::configuration::servers#each()","capistrano::configuration::question#echo?()","capistrano::immutabletask#enhance()","capistrano::taskenhancements#ensure_stage()","capistrano::configuration::env()","capistrano::dsl::env#env()","capistrano::plugin#eval_rakefile()","capistrano::dsl#execute()","capistrano::application#exit_because_of_exception()","capistrano::taskenhancements#exit_deploy_because_of_exception()","capistrano::immutabletask::extended()","capistrano::configuration::servers#extract_options()","capistrano::configuration::server::properties#fetch()","capistrano::configuration::variables#fetch()","capistrano::scm#fetch()","capistrano::configuration::variables#fetch_for()","capistrano::configuration::servers#fetch_primary()","capistrano::scm#fetch_revision()","capistrano::scm::git#fetch_revision()","capistrano::scm::hg#fetch_revision()","capistrano::scm::svn#fetch_revision()","capistrano::configuration#filter()","capistrano::configuration::emptyfilter#filter()","capistrano::configuration::filter#filter()","capistrano::configuration::hostfilter#filter()","capistrano::configuration::nullfilter#filter()","capistrano::configuration::rolefilter#filter()","capistrano::doctor::serversdoctor::rolewhitespacechecker#find_whitespace_roles()","capistrano::configuration::question#gets()","capistrano::scm::git#git()","capistrano::application#handle_options()","capistrano::configuration::server#has_role?()","capistrano::scm::hg#hg()","capistrano::application#hostfilter()","capistrano::doctor::serversdoctor::rolewhitespacechecker#include_whitespace?()","capistrano::doctor::variablesdoctor#inspect_all_values()","capistrano::configuration::plugininstaller#install()","capistrano::configuration#install_plugin()","capistrano::doctor::gemsdoctor#installed_gem_version()","capistrano::configuration#installer()","capistrano::dsl#invoke()","capistrano::configuration#is_question?()","capistrano::dsl::paths#join_paths()","capistrano::configuration::server::properties#keys()","capistrano::configuration::variables#keys()","capistrano::dsl::paths#linked_dir_parents()","capistrano::dsl::paths#linked_dirs()","capistrano::dsl::paths#linked_file_dirs()","capistrano::dsl::paths#linked_files()","capistrano::configuration::scmresolver#load_built_in_scm()","capistrano::application#load_imports()","capistrano::configuration::scmresolver#load_legacy_scm_by_name()","capistrano::dsl#local_user()","capistrano::doctor::variablesdoctor#location()","capistrano::dsl#lock()","capistrano::configuration::server::properties#lvalue()","capistrano::dsl::paths#map_dirnames()","capistrano::versionvalidator#match?()","capistrano::configuration::server#matches?()","capistrano::configuration::server::properties#method_missing()","capistrano::application#name()","capistrano::uploadtask#needed?()","capistrano::configuration::server#netssh_options()","capistrano::application::new()","capistrano::configuration::new()","capistrano::configuration::filter::new()","capistrano::configuration::hostfilter::new()","capistrano::configuration::question::new()","capistrano::configuration::rolefilter::new()","capistrano::configuration::server::properties::new()","capistrano::configuration::validatedvariables::new()","capistrano::configuration::validatedvariables::validatedquestion::new()","capistrano::configuration::variables::new()","capistrano::doctor::outputhelpers::row::new()","capistrano::doctor::serversdoctor::new()","capistrano::doctor::serversdoctor::rolewhitespacechecker::new()","capistrano::doctor::serversdoctor::serverdecorator::new()","capistrano::doctor::variablesdoctor::new()","capistrano::scm::new()","capistrano::versionvalidator::new()","capistrano::dsl::paths#now()","capistrano::dsl#on()","capistrano::configuration::variables#peek()","capistrano::doctor::gemsdoctor#plugin_gem_names()","capistrano::doctor::serversdoctor::serverdecorator#pretty_inspect()","capistrano::configuration#primary()","capistrano::configuration::server#primary()","capistrano::application#print_config_variables()","capistrano::configuration::scmresolver#print_deprecation_warnings_if_applicable()","capistrano::configuration::server#properties()","capistrano::doctor::serversdoctor::serverdecorator#properties()","capistrano::configuration::plugininstaller#provides_scm?()","capistrano::doctor::outputhelpers#puts()","capistrano::configuration::question#question()","capistrano::configuration::hostfilter#regex_matcher()","capistrano::configuration::rolefilter#regex_matcher()","capistrano::plugin#register_hooks()","capistrano::scm::git#register_hooks()","capistrano::scm::hg#register_hooks()","capistrano::scm::svn#register_hooks()","capistrano::configuration::scmresolver#register_legacy_scm_hooks()","capistrano::scm#release()","capistrano::dsl::paths#release_path()","capistrano::scm#release_path()","capistrano::dsl::env#release_roles()","capistrano::dsl::env#release_timestamp()","capistrano::dsl::paths#releases_path()","capistrano::configuration::variables#remember_location()","capistrano::configuration#remove()","capistrano::scm::git#repo_mirror_exists?()","capistrano::scm::hg#repo_mirror_exists?()","capistrano::scm::svn#repo_mirror_exists?()","capistrano::dsl::paths#repo_path()","capistrano::scm#repo_path()","capistrano::dsl::paths#repo_url()","capistrano::scm#repo_url()","capistrano::versionvalidator#requested()","capistrano::configuration::reset!()","capistrano::configuration::scmresolver#resolve()","capistrano::configuration::server::properties#respond_to_missing?()","capistrano::configuration::question#response()","capistrano::dsl::paths#revision_log()","capistrano::dsl#revision_log_message()","capistrano::configuration#role()","capistrano::dsl::env#role_properties()","capistrano::configuration#role_properties_for()","capistrano::configuration::servers#role_properties_for()","capistrano::application#roles()","capistrano::configuration::server::properties#roles()","capistrano::dsl::env#roles()","capistrano::doctor::serversdoctor::serverdecorator#roles()","capistrano::configuration::server#roles=()","capistrano::configuration::server#roles_array()","capistrano::configuration#roles_for()","capistrano::configuration::servers#roles_for()","capistrano::dsl#rollback_log_message()","capistrano::application#run()","capistrano::dsl#run_locally()","capistrano::dsl#scm()","capistrano::scm::plugin#scm?()","capistrano::configuration::plugininstaller#scm_installed?()","capistrano::configuration::scmresolver#scm_name()","capistrano::configuration#scm_plugin_installed?()","capistrano::configuration::server#select?()","capistrano::configuration#server()","capistrano::configuration#servers()","capistrano::configuration::servers#servers()","capistrano::configuration::server::properties#set()","capistrano::configuration::validatedvariables#set()","capistrano::configuration::variables#set()","capistrano::plugin#set_defaults()","capistrano::scm::git#set_defaults()","capistrano::configuration#set_if_empty()","capistrano::dsl::paths#set_release_path()","capistrano::configuration#setup_filters()","capistrano::dsl::paths#shared_path()","capistrano::application#sort_options()","capistrano::configuration::variables#source_locations()","capistrano::dsl::paths#stage_config_path()","capistrano::dsl::stages#stage_definitions()","capistrano::dsl::stages#stage_set?()","capistrano::dsl::stages#stages()","capistrano::dsl#sudo()","capistrano::doctor::variablesdoctor#suspicious_keys()","capistrano::scm::svn#svn()","capistrano::dsl#t()","capistrano::doctor::outputhelpers#table()","capistrano::taskenhancements#tasks_without_stage_dependency()","capistrano::scm#test()","capistrano::scm#test!()","capistrano::configuration::scmresolver#third_party_scm_name?()","capistrano::configuration#timestamp()","capistrano::doctor::outputhelpers#title()","capistrano::configuration::server::properties#to_h()","capistrano::application#top_level_tasks()","capistrano::configuration::variables#trace_set()","capistrano::configuration::variables#trusted?()","capistrano::configuration::variables#trusted_keys()","capistrano::configuration::variables#untrusted!()","capistrano::configuration::variables#untrusted_keys()","capistrano::configuration::variables#unused_keys()","capistrano::scm#update()","capistrano::doctor::gemsdoctor#update_available?()","capistrano::scm::git#update_mirror()","capistrano::scm::hg#update_mirror()","capistrano::scm::svn#update_mirror()","capistrano::doctor::serversdoctor::serverdecorator#uri_form()","capistrano::configuration::scmresolver#using_default_scm?()","capistrano::configuration::validatedvariables#validate()","capistrano::configuration::question#value_or_default()","capistrano::doctor::variablesdoctor#variables()","capistrano::versionvalidator#verify()","capistrano::application#version()","capistrano::configuration::scmresolver#warn_add_git_to_capfile()","capistrano::configuration::scmresolver#warn_set_scm_is_deprecated()","capistrano::configuration::scmresolver#warn_third_party_scm_must_be_upgraded()","capistrano::doctor::outputhelpers#warning()","capistrano::doctor::serversdoctor::rolewhitespacechecker#whitespace_roles_decorated()","capistrano::configuration::server#with()","capistrano::doctor::outputhelpers::row#yellow()","","","","","","","","","",""],"info":[["Capistrano","","Capistrano.html","","<p>Encapsulates the logic for installing plugins into Capistrano. Plugins must\nsimply conform to a basic …\n"],["Capistrano::Application","","Capistrano/Application.html","",""],["Capistrano::Configuration","","Capistrano/Configuration.html","",""],["Capistrano::Configuration::EmptyFilter","","Capistrano/Configuration/EmptyFilter.html","",""],["Capistrano::Configuration::Filter","","Capistrano/Configuration/Filter.html","",""],["Capistrano::Configuration::HostFilter","","Capistrano/Configuration/HostFilter.html","",""],["Capistrano::Configuration::NullFilter","","Capistrano/Configuration/NullFilter.html","",""],["Capistrano::Configuration::PluginInstaller","","Capistrano/Configuration/PluginInstaller.html","",""],["Capistrano::Configuration::Question","","Capistrano/Configuration/Question.html","",""],["Capistrano::Configuration::RoleFilter","","Capistrano/Configuration/RoleFilter.html","",""],["Capistrano::Configuration::SCMResolver","","Capistrano/Configuration/SCMResolver.html","","<p>In earlier versions of Capistrano, users would specify the desired SCM\nimplementation using `set :scm, …\n"],["Capistrano::Configuration::Server","","Capistrano/Configuration/Server.html","",""],["Capistrano::Configuration::Server::Properties","","Capistrano/Configuration/Server/Properties.html","",""],["Capistrano::Configuration::Servers","","Capistrano/Configuration/Servers.html","",""],["Capistrano::Configuration::ValidatedVariables","","Capistrano/Configuration/ValidatedVariables.html","","<p>Decorates a Variables object to additionally perform an optional set of\nuser-supplied validation rules. …\n"],["Capistrano::Configuration::ValidatedVariables::ValidatedQuestion","","Capistrano/Configuration/ValidatedVariables/ValidatedQuestion.html","",""],["Capistrano::Configuration::Variables","","Capistrano/Configuration/Variables.html","","<p>Holds the variables assigned at Capistrano runtime via `set` and retrieved\nwith `fetch`. Does internal …\n"],["Capistrano::DSL","","Capistrano/DSL.html","",""],["Capistrano::DSL::Env","","Capistrano/DSL/Env.html","",""],["Capistrano::DSL::Paths","","Capistrano/DSL/Paths.html","",""],["Capistrano::DSL::Stages","","Capistrano/DSL/Stages.html","",""],["Capistrano::Doctor","","Capistrano/Doctor.html","",""],["Capistrano::Doctor::EnvironmentDoctor","","Capistrano/Doctor/EnvironmentDoctor.html","",""],["Capistrano::Doctor::GemsDoctor","","Capistrano/Doctor/GemsDoctor.html","","<p>Prints table of all Capistrano-related gems and their version numbers. If\nthere is a newer version of …\n"],["Capistrano::Doctor::OutputHelpers","","Capistrano/Doctor/OutputHelpers.html","","<p>Helper methods for pretty-printing doctor output to stdout. All output\n(other than `title`) is indented …\n"],["Capistrano::Doctor::OutputHelpers::Row","","Capistrano/Doctor/OutputHelpers/Row.html","",""],["Capistrano::Doctor::ServersDoctor","","Capistrano/Doctor/ServersDoctor.html","",""],["Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html","",""],["Capistrano::Doctor::ServersDoctor::ServerDecorator","","Capistrano/Doctor/ServersDoctor/ServerDecorator.html","",""],["Capistrano::Doctor::VariablesDoctor","","Capistrano/Doctor/VariablesDoctor.html","","<p>Prints a table of all Capistrano variables and their current values. If\nthere are unrecognized variables, …\n"],["Capistrano::ImmutableTask","","Capistrano/ImmutableTask.html","","<p>This module extends a Rake::Task to freeze it to prevent it from being\nenhanced. This is used to prevent …\n"],["Capistrano::Plugin","","Capistrano/Plugin.html","","<p>IMPORTANT: The Capistrano::Plugin system is not yet considered a stable,\npublic API, and is subject to …\n"],["Capistrano::ProcHelpers","","Capistrano/ProcHelpers.html","",""],["Capistrano::SCM","","Capistrano/SCM.html","","<p>Base class for SCM strategy providers.\n<p>@abstract\n<p>@attr_reader [Rake] context\n"],["Capistrano::SCM::Git","","Capistrano/SCM/Git.html","",""],["Capistrano::SCM::Hg","","Capistrano/SCM/Hg.html","",""],["Capistrano::SCM::Plugin","","Capistrano/SCM/Plugin.html","","<p>Base class for all built-in and third-party SCM plugins. Notice that this\nclass doesn&#39;t really do …\n"],["Capistrano::SCM::Svn","","Capistrano/SCM/Svn.html","",""],["Capistrano::TaskEnhancements","","Capistrano/TaskEnhancements.html","",""],["Capistrano::UploadTask","","Capistrano/UploadTask.html","",""],["Capistrano::ValidationError","","Capistrano/ValidationError.html","",""],["Capistrano::VersionValidator","","Capistrano/VersionValidator.html","",""],["Object","","Object.html","",""],["Rake","","Rake.html","",""],["<<","Capistrano::Doctor::OutputHelpers::Row","Capistrano/Doctor/OutputHelpers/Row.html#method-i-3C-3C","(value)",""],["[]","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-c-5B-5D","(host)",""],["add_cmdline_filter","Capistrano::Configuration","Capistrano/Configuration.html#method-i-add_cmdline_filter","(type, values)",""],["add_filter","Capistrano::Configuration","Capistrano/Configuration.html#method-i-add_filter","(filter=nil, &block)",""],["add_host","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-add_host","(host, properties={})",""],["add_property","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-add_property","(key, value)",""],["add_role","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-add_role","(role)",""],["add_role","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-add_role","(role, hosts, options={})",""],["add_roles","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-add_roles","(roles)",""],["after","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-after","(task, post_task, *args, &block)",""],["all_gem_names","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-all_gem_names","()",""],["any?","Capistrano::Configuration","Capistrano/Configuration.html#method-i-any-3F","(key)",""],["any_has_whitespace?","Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html#method-i-any_has_whitespace-3F","(roles)",""],["append","Capistrano::Configuration","Capistrano/Configuration.html#method-i-append","(key, *values)",""],["archive_to_release_path","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-archive_to_release_path","()",""],["archive_to_release_path","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-archive_to_release_path","()",""],["archive_to_release_path","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-archive_to_release_path","()",""],["ask","Capistrano::Configuration","Capistrano/Configuration.html#method-i-ask","(key, default=nil, options={})",""],["ask_question","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-ask_question","()",""],["assert_valid_later","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-i-assert_valid_later","(key, callable)","<p>Given a callable that provides a value, wrap the callable with another\nobject that responds to `call`. …\n"],["assert_valid_now","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-i-assert_valid_now","(key, value)","<p>Runs all validation rules registered for the given key against the\nuser-supplied value for that variable. …\n"],["assert_valid_stage_names","Capistrano::DSL::Stages","Capistrano/DSL/Stages.html#method-i-assert_valid_stage_names","(names)",""],["assert_value_or_block_not_both","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-i-assert_value_or_block_not_both","(value, block)",""],["asset_timestamp","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-asset_timestamp","()",""],["asset_timestamp","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-asset_timestamp","()",""],["available","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-i-available","()",""],["backend","Capistrano::Configuration","Capistrano/Configuration.html#method-i-backend","()",""],["backend","Capistrano::Plugin","Capistrano/Plugin.html#method-i-backend","()","<p>Convenience to access the current SSHKit backend outside of an `on` block.\n"],["backtrace_pattern","Capistrano::Application","Capistrano/Application.html#method-i-backtrace_pattern","()",""],["before","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-before","(task, prerequisite, *args, &block)",""],["built_in_scm_name?","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-built_in_scm_name-3F","()",""],["built_in_scm_plugin_class_name","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-built_in_scm_plugin_class_name","()",""],["calculate_column_widths","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-calculate_column_widths","(rows)",""],["call","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-call","()",""],["call","Capistrano::Configuration::ValidatedVariables::ValidatedQuestion","Capistrano/Configuration/ValidatedVariables/ValidatedQuestion.html#method-i-call","()",""],["call","Capistrano::Doctor::EnvironmentDoctor","Capistrano/Doctor/EnvironmentDoctor.html#method-i-call","()",""],["call","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-call","()",""],["call","Capistrano::Doctor::ServersDoctor","Capistrano/Doctor/ServersDoctor.html#method-i-call","()",""],["call","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-i-call","()",""],["callable_without_parameters?","Capistrano::ProcHelpers","Capistrano/ProcHelpers.html#method-i-callable_without_parameters-3F","(x)","<p>Tests whether the given object appears to respond to `call` with zero\nparameters. In Capistrano, such …\n"],["capfile","Capistrano::Application","Capistrano/Application.html#method-i-capfile","()","<p>allows the `cap install` task to load without a capfile\n"],["check","Capistrano::SCM","Capistrano/SCM.html#method-i-check","()","<p>@abstract\n<p>Your implementation should check if the specified remote-repository is\navailable.\n<p>@return [Boolean] …\n"],["check_repo_is_reachable","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-check_repo_is_reachable","()",""],["check_repo_is_reachable","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-check_repo_is_reachable","()",""],["check_repo_is_reachable","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-check_repo_is_reachable","()",""],["clone","Capistrano::SCM","Capistrano/SCM.html#method-i-clone","()","<p>@abstract\n<p>Create a (new) clone of the remote-repository on the deployment target\n<p>@return void\n"],["clone_repo","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-clone_repo","()",""],["clone_repo","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-clone_repo","()",""],["clone_repo","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-clone_repo","()",""],["cmdline_filters","Capistrano::Configuration","Capistrano/Configuration.html#method-i-cmdline_filters","()",""],["collect_rows","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-collect_rows","(records)",""],["color","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-color","()",""],["configure_backend","Capistrano::Configuration","Capistrano/Configuration.html#method-i-configure_backend","()",""],["configure_scm","Capistrano::Configuration","Capistrano/Configuration.html#method-i-configure_scm","()",""],["configure_sshkit_output","Capistrano::Configuration","Capistrano/Configuration.html#method-i-configure_sshkit_output","(sshkit)",""],["core_gem_names","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-core_gem_names","()",""],["current_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-current_path","()",""],["current_version","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-i-current_version","()",""],["default_tasks","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-default_tasks","()",""],["define_remote_file_task","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-define_remote_file_task","(task, target_roles)",""],["define_tasks","Capistrano::Plugin","Capistrano/Plugin.html#method-i-define_tasks","()","<p>Implemented by subclasses to define Rake tasks. Typically a plugin will\ncall `eval_rakefile` to load …\n"],["define_tasks","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-define_tasks","()",""],["define_tasks","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-define_tasks","()",""],["define_tasks","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-define_tasks","()",""],["delete","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-delete","(key)",""],["deploy_config_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-deploy_config_path","()",""],["deploy_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-deploy_path","()",""],["deploy_to","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-deploy_to","()",""],["deploying?","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-deploying-3F","()",""],["display_error_message","Capistrano::Application","Capistrano/Application.html#method-i-display_error_message","(ex)",""],["dry_run","Capistrano::Application","Capistrano/Application.html#method-i-dry_run","()",""],["dry_run?","Capistrano::Configuration","Capistrano/Configuration.html#method-i-dry_run-3F","()",""],["each","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-each","()",""],["echo?","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-echo-3F","()",""],["enhance","Capistrano::ImmutableTask","Capistrano/ImmutableTask.html#method-i-enhance","(*args, &block)",""],["ensure_stage","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-ensure_stage","()",""],["env","Capistrano::Configuration","Capistrano/Configuration.html#method-c-env","()",""],["env","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-env","()",""],["eval_rakefile","Capistrano::Plugin","Capistrano/Plugin.html#method-i-eval_rakefile","(path)","<p>Read and eval a .rake file in such a way that `self` within the .rake file\nrefers to this plugin instance. …\n"],["execute","Capistrano::DSL","Capistrano/DSL.html#method-i-execute","(*)","<p>Catch common beginner mistake and give a helpful error message on stderr\n"],["exit_because_of_exception","Capistrano::Application","Capistrano/Application.html#method-i-exit_because_of_exception","(ex)",""],["exit_deploy_because_of_exception","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-exit_deploy_because_of_exception","(ex)",""],["extended","Capistrano::ImmutableTask","Capistrano/ImmutableTask.html#method-c-extended","(task)",""],["extract_options","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-extract_options","(array)",""],["fetch","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-fetch","(key)",""],["fetch","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-fetch","(key, default=nil, &block)",""],["fetch","Capistrano::SCM","Capistrano/SCM.html#method-i-fetch","(*args)","<p>Fetch a var from the context @param [Symbol] variable The variable to fetch\n@param [Object] default  …\n"],["fetch_for","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-fetch_for","(key, default, &block)",""],["fetch_primary","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-fetch_primary","(role)",""],["fetch_revision","Capistrano::SCM","Capistrano/SCM.html#method-i-fetch_revision","()","<p>@abstract\n<p>Identify the SHA of the commit that will be deployed.  This will most\nlikely involve SshKit&#39;s …\n"],["fetch_revision","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-fetch_revision","()",""],["fetch_revision","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-fetch_revision","()",""],["fetch_revision","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-fetch_revision","()",""],["filter","Capistrano::Configuration","Capistrano/Configuration.html#method-i-filter","(list)",""],["filter","Capistrano::Configuration::EmptyFilter","Capistrano/Configuration/EmptyFilter.html#method-i-filter","(_servers)",""],["filter","Capistrano::Configuration::Filter","Capistrano/Configuration/Filter.html#method-i-filter","(servers)",""],["filter","Capistrano::Configuration::HostFilter","Capistrano/Configuration/HostFilter.html#method-i-filter","(servers)",""],["filter","Capistrano::Configuration::NullFilter","Capistrano/Configuration/NullFilter.html#method-i-filter","(servers)",""],["filter","Capistrano::Configuration::RoleFilter","Capistrano/Configuration/RoleFilter.html#method-i-filter","(servers)",""],["find_whitespace_roles","Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html#method-i-find_whitespace_roles","()",""],["gets","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-gets","()",""],["git","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-git","(*args)",""],["handle_options","Capistrano::Application","Capistrano/Application.html#method-i-handle_options","()",""],["has_role?","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-has_role-3F","(role)",""],["hg","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-hg","(*args)",""],["hostfilter","Capistrano::Application","Capistrano/Application.html#method-i-hostfilter","()",""],["include_whitespace?","Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html#method-i-include_whitespace-3F","(role)",""],["inspect_all_values","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-i-inspect_all_values","()",""],["install","Capistrano::Configuration::PluginInstaller","Capistrano/Configuration/PluginInstaller.html#method-i-install","(plugin, load_hooks: true, load_immediately: false)","<p>“Installs” a Plugin into Capistrano by loading its tasks, hooks, and\ndefaults at the appropriate …\n"],["install_plugin","Capistrano::Configuration","Capistrano/Configuration.html#method-i-install_plugin","(plugin, load_hooks: true, load_immediately: false)",""],["installed_gem_version","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-installed_gem_version","(gem_name)",""],["installer","Capistrano::Configuration","Capistrano/Configuration.html#method-i-installer","()",""],["invoke","Capistrano::DSL","Capistrano/DSL.html#method-i-invoke","(task_name, *args)",""],["is_question?","Capistrano::Configuration","Capistrano/Configuration.html#method-i-is_question-3F","(key)",""],["join_paths","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-join_paths","(parent, paths)",""],["keys","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-keys","()",""],["keys","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-keys","()",""],["linked_dir_parents","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-linked_dir_parents","(parent)",""],["linked_dirs","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-linked_dirs","(parent)",""],["linked_file_dirs","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-linked_file_dirs","(parent)",""],["linked_files","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-linked_files","(parent)",""],["load_built_in_scm","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-load_built_in_scm","()",""],["load_imports","Capistrano::Application","Capistrano/Application.html#method-i-load_imports","()",""],["load_legacy_scm_by_name","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-load_legacy_scm_by_name","()",""],["local_user","Capistrano::DSL","Capistrano/DSL.html#method-i-local_user","()",""],["location","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-i-location","(key)",""],["lock","Capistrano::DSL","Capistrano/DSL.html#method-i-lock","(locked_version)",""],["lvalue","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-lvalue","(key)",""],["map_dirnames","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-map_dirnames","(paths)",""],["match?","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-i-match-3F","()",""],["matches?","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-matches-3F","(other)",""],["method_missing","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-method_missing","(key, value=nil)","<p>rubocop:disable Style/MethodMissing\n"],["name","Capistrano::Application","Capistrano/Application.html#method-i-name","()",""],["needed?","Capistrano::UploadTask","Capistrano/UploadTask.html#method-i-needed-3F","()",""],["netssh_options","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-netssh_options","()",""],["new","Capistrano::Application","Capistrano/Application.html#method-c-new","()",""],["new","Capistrano::Configuration","Capistrano/Configuration.html#method-c-new","(values={})",""],["new","Capistrano::Configuration::Filter","Capistrano/Configuration/Filter.html#method-c-new","(type, values=nil)",""],["new","Capistrano::Configuration::HostFilter","Capistrano/Configuration/HostFilter.html#method-c-new","(values)",""],["new","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-c-new","(key, default, options={})",""],["new","Capistrano::Configuration::RoleFilter","Capistrano/Configuration/RoleFilter.html#method-c-new","(values)",""],["new","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-c-new","()",""],["new","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-c-new","(variables)",""],["new","Capistrano::Configuration::ValidatedVariables::ValidatedQuestion","Capistrano/Configuration/ValidatedVariables/ValidatedQuestion.html#method-c-new","(validator)",""],["new","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-c-new","(values={})",""],["new","Capistrano::Doctor::OutputHelpers::Row","Capistrano/Doctor/OutputHelpers/Row.html#method-c-new","()",""],["new","Capistrano::Doctor::ServersDoctor","Capistrano/Doctor/ServersDoctor.html#method-c-new","(env=Capistrano::Configuration.env)",""],["new","Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html#method-c-new","(servers)",""],["new","Capistrano::Doctor::ServersDoctor::ServerDecorator","Capistrano/Doctor/ServersDoctor/ServerDecorator.html#method-c-new","(server)",""],["new","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-c-new","(env=Capistrano::Configuration.env)",""],["new","Capistrano::SCM","Capistrano/SCM.html#method-c-new","(context, strategy)","<p>Provide a wrapper for the SCM that loads a strategy for the user.\n<p>@param [Rake] context     The context …\n"],["new","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-c-new","(version)",""],["now","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-now","()",""],["on","Capistrano::DSL","Capistrano/DSL.html#method-i-on","(hosts, options={}, &block)",""],["peek","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-peek","(key, default=nil, &block)","<p>Internal use only.\n"],["plugin_gem_names","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-plugin_gem_names","()",""],["pretty_inspect","Capistrano::Doctor::ServersDoctor::ServerDecorator","Capistrano/Doctor/ServersDoctor/ServerDecorator.html#method-i-pretty_inspect","(element)","<p>Hashes with proper padding\n"],["primary","Capistrano::Configuration","Capistrano/Configuration.html#method-i-primary","(role)",""],["primary","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-primary","()",""],["print_config_variables","Capistrano::Application","Capistrano/Application.html#method-i-print_config_variables","()",""],["print_deprecation_warnings_if_applicable","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-print_deprecation_warnings_if_applicable","()","<p>rubocop:enable Style/GuardClause\n"],["properties","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-properties","()",""],["properties","Capistrano::Doctor::ServersDoctor::ServerDecorator","Capistrano/Doctor/ServersDoctor/ServerDecorator.html#method-i-properties","()",""],["provides_scm?","Capistrano::Configuration::PluginInstaller","Capistrano/Configuration/PluginInstaller.html#method-i-provides_scm-3F","(plugin)",""],["puts","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-puts","(string=nil)","<p>Override `Kernel#puts` to prepend four spaces to each line.\n"],["question","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-question","()",""],["regex_matcher","Capistrano::Configuration::HostFilter","Capistrano/Configuration/HostFilter.html#method-i-regex_matcher","(values)",""],["regex_matcher","Capistrano::Configuration::RoleFilter","Capistrano/Configuration/RoleFilter.html#method-i-regex_matcher","(values)",""],["register_hooks","Capistrano::Plugin","Capistrano/Plugin.html#method-i-register_hooks","()","<p>Implemented by subclasses to hook into Capistrano&#39;s deployment flow\nusing using the `before` and …\n"],["register_hooks","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-register_hooks","()",""],["register_hooks","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-register_hooks","()",""],["register_hooks","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-register_hooks","()",""],["register_legacy_scm_hooks","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-register_legacy_scm_hooks","()","<p>rubocop:disable Style/GuardClause\n"],["release","Capistrano::SCM","Capistrano/SCM.html#method-i-release","()","<p>@abstract\n<p>Copy the contents of the cache-repository onto the release path\n<p>@return void\n"],["release_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-release_path","()",""],["release_path","Capistrano::SCM","Capistrano/SCM.html#method-i-release_path","()","<p>The release path according to the context\n"],["release_roles","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-release_roles","(*names)",""],["release_timestamp","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-release_timestamp","()",""],["releases_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-releases_path","()",""],["remember_location","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-remember_location","(key)",""],["remove","Capistrano::Configuration","Capistrano/Configuration.html#method-i-remove","(key, *values)",""],["repo_mirror_exists?","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-repo_mirror_exists-3F","()",""],["repo_mirror_exists?","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-repo_mirror_exists-3F","()",""],["repo_mirror_exists?","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-repo_mirror_exists-3F","()",""],["repo_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-repo_path","()",""],["repo_path","Capistrano::SCM","Capistrano/SCM.html#method-i-repo_path","()","<p>The repository path according to the context\n"],["repo_url","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-repo_url","()",""],["repo_url","Capistrano::SCM","Capistrano/SCM.html#method-i-repo_url","()","<p>The repository URL according to the context\n"],["requested","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-i-requested","()",""],["reset!","Capistrano::Configuration","Capistrano/Configuration.html#method-c-reset-21","()",""],["resolve","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-resolve","()",""],["respond_to_missing?","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-respond_to_missing-3F","(method, _include_all=false)",""],["response","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-response","()",""],["revision_log","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-revision_log","()",""],["revision_log_message","Capistrano::DSL","Capistrano/DSL.html#method-i-revision_log_message","()",""],["role","Capistrano::Configuration","Capistrano/Configuration.html#method-i-role","(name, hosts, options={})",""],["role_properties","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-role_properties","(*names, &block)",""],["role_properties_for","Capistrano::Configuration","Capistrano/Configuration.html#method-i-role_properties_for","(names, &block)",""],["role_properties_for","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-role_properties_for","(rolenames)",""],["roles","Capistrano::Application","Capistrano/Application.html#method-i-roles","()",""],["roles","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-roles","()",""],["roles","Capistrano::DSL::Env","Capistrano/DSL/Env.html#method-i-roles","(*names)",""],["roles","Capistrano::Doctor::ServersDoctor::ServerDecorator","Capistrano/Doctor/ServersDoctor/ServerDecorator.html#method-i-roles","()",""],["roles=","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-roles-3D","(roles)",""],["roles_array","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-roles_array","()",""],["roles_for","Capistrano::Configuration","Capistrano/Configuration.html#method-i-roles_for","(names)",""],["roles_for","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-roles_for","(names)",""],["rollback_log_message","Capistrano::DSL","Capistrano/DSL.html#method-i-rollback_log_message","()",""],["run","Capistrano::Application","Capistrano/Application.html#method-i-run","()",""],["run_locally","Capistrano::DSL","Capistrano/DSL.html#method-i-run_locally","(&block)",""],["scm","Capistrano::DSL","Capistrano/DSL.html#method-i-scm","()",""],["scm?","Capistrano::SCM::Plugin","Capistrano/SCM/Plugin.html#method-i-scm-3F","()",""],["scm_installed?","Capistrano::Configuration::PluginInstaller","Capistrano/Configuration/PluginInstaller.html#method-i-scm_installed-3F","()",""],["scm_name","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-scm_name","()",""],["scm_plugin_installed?","Capistrano::Configuration","Capistrano/Configuration.html#method-i-scm_plugin_installed-3F","()",""],["select?","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-select-3F","(options)",""],["server","Capistrano::Configuration","Capistrano/Configuration.html#method-i-server","(name, properties={})",""],["servers","Capistrano::Configuration","Capistrano/Configuration.html#method-i-servers","()",""],["servers","Capistrano::Configuration::Servers","Capistrano/Configuration/Servers.html#method-i-servers","()",""],["set","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-set","(key, value)",""],["set","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-i-set","(key, value=nil, &block)","<p>Decorate Variables#set to add validation behavior.\n"],["set","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-set","(key, value=nil, &block)",""],["set_defaults","Capistrano::Plugin","Capistrano/Plugin.html#method-i-set_defaults","()","<p>Implemented by subclasses to provide default values for settings needed by\nthis plugin. Typically done …\n"],["set_defaults","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-set_defaults","()",""],["set_if_empty","Capistrano::Configuration","Capistrano/Configuration.html#method-i-set_if_empty","(key, value=nil, &block)",""],["set_release_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-set_release_path","(timestamp=now)",""],["setup_filters","Capistrano::Configuration","Capistrano/Configuration.html#method-i-setup_filters","()",""],["shared_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-shared_path","()",""],["sort_options","Capistrano::Application","Capistrano/Application.html#method-i-sort_options","(options)",""],["source_locations","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-source_locations","(key)","<p>Returns an array of source file location(s) where the given key was\nassigned (i.e. where `set` was called). …\n"],["stage_config_path","Capistrano::DSL::Paths","Capistrano/DSL/Paths.html#method-i-stage_config_path","()",""],["stage_definitions","Capistrano::DSL::Stages","Capistrano/DSL/Stages.html#method-i-stage_definitions","()",""],["stage_set?","Capistrano::DSL::Stages","Capistrano/DSL/Stages.html#method-i-stage_set-3F","()",""],["stages","Capistrano::DSL::Stages","Capistrano/DSL/Stages.html#method-i-stages","()",""],["sudo","Capistrano::DSL","Capistrano/DSL.html#method-i-sudo","(*args)",""],["suspicious_keys","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-i-suspicious_keys","()",""],["svn","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-svn","(*args)",""],["t","Capistrano::DSL","Capistrano/DSL.html#method-i-t","(key, options={})",""],["table","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-table","(records, &block)","<p>Prints a table for a given array of records. For each record, the block is\nyielded two arguments: the …\n"],["tasks_without_stage_dependency","Capistrano::TaskEnhancements","Capistrano/TaskEnhancements.html#method-i-tasks_without_stage_dependency","()",""],["test","Capistrano::SCM","Capistrano/SCM.html#method-i-test","()","<p>@abstract\n<p>Your implementation should check the existence of a cache repository on the\ndeployment target …\n"],["test!","Capistrano::SCM","Capistrano/SCM.html#method-i-test-21","(*args)","<p>Call test in context\n"],["third_party_scm_name?","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-third_party_scm_name-3F","()",""],["timestamp","Capistrano::Configuration","Capistrano/Configuration.html#method-i-timestamp","()",""],["title","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-title","(text)","<p>Prints a title in blue with surrounding newlines.\n"],["to_h","Capistrano::Configuration::Server::Properties","Capistrano/Configuration/Server/Properties.html#method-i-to_h","()","<p>rubocop:enable Style/MethodMissing\n"],["top_level_tasks","Capistrano::Application","Capistrano/Application.html#method-i-top_level_tasks","()",""],["trace_set","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-trace_set","(key)",""],["trusted?","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-trusted-3F","()",""],["trusted_keys","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-trusted_keys","()",""],["untrusted!","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-untrusted-21","()",""],["untrusted_keys","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-untrusted_keys","()",""],["unused_keys","Capistrano::Configuration::Variables","Capistrano/Configuration/Variables.html#method-i-unused_keys","()","<p>Keys that have been set, but which have never been fetched.\n"],["update","Capistrano::SCM","Capistrano/SCM.html#method-i-update","()","<p>@abstract\n<p>Update the clone on the deployment target\n<p>@return void\n"],["update_available?","Capistrano::Doctor::GemsDoctor","Capistrano/Doctor/GemsDoctor.html#method-i-update_available-3F","(gem_name)",""],["update_mirror","Capistrano::SCM::Git","Capistrano/SCM/Git.html#method-i-update_mirror","()",""],["update_mirror","Capistrano::SCM::Hg","Capistrano/SCM/Hg.html#method-i-update_mirror","()",""],["update_mirror","Capistrano::SCM::Svn","Capistrano/SCM/Svn.html#method-i-update_mirror","()",""],["uri_form","Capistrano::Doctor::ServersDoctor::ServerDecorator","Capistrano/Doctor/ServersDoctor/ServerDecorator.html#method-i-uri_form","()",""],["using_default_scm?","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-using_default_scm-3F","()",""],["validate","Capistrano::Configuration::ValidatedVariables","Capistrano/Configuration/ValidatedVariables.html#method-i-validate","(key, &validator)","<p>Register a validation rule for the given key.\n"],["value_or_default","Capistrano::Configuration::Question","Capistrano/Configuration/Question.html#method-i-value_or_default","()",""],["variables","Capistrano::Doctor::VariablesDoctor","Capistrano/Doctor/VariablesDoctor.html#method-i-variables","()",""],["verify","Capistrano::VersionValidator","Capistrano/VersionValidator.html#method-i-verify","()",""],["version","Capistrano::Application","Capistrano/Application.html#method-i-version","()",""],["warn_add_git_to_capfile","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-warn_add_git_to_capfile","()",""],["warn_set_scm_is_deprecated","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-warn_set_scm_is_deprecated","()",""],["warn_third_party_scm_must_be_upgraded","Capistrano::Configuration::SCMResolver","Capistrano/Configuration/SCMResolver.html#method-i-warn_third_party_scm_must_be_upgraded","()",""],["warning","Capistrano::Doctor::OutputHelpers","Capistrano/Doctor/OutputHelpers.html#method-i-warning","(text)","<p>Prints text in yellow.\n"],["whitespace_roles_decorated","Capistrano::Doctor::ServersDoctor::RoleWhitespaceChecker","Capistrano/Doctor/ServersDoctor/RoleWhitespaceChecker.html#method-i-whitespace_roles_decorated","()",""],["with","Capistrano::Configuration::Server","Capistrano/Configuration/Server.html#method-i-with","(properties)",""],["yellow","Capistrano::Doctor::OutputHelpers::Row","Capistrano/Doctor/OutputHelpers/Row.html#method-i-yellow","()",""],["Capfile","","lib/Capfile.html","","<p>#!/usr/bin/env cap include Capistrano::DSL require “capistrano/install”\n<p>require “capistrano/harrow” …\n"],["git.rake","","lib/capistrano/scm/tasks/git_rake.html","","<p># This trick lets us access the Git plugin within `on` blocks. git_plugin =\nself\n<p>namespace :git do\n\n<pre>desc ...</pre>\n"],["hg.rake","","lib/capistrano/scm/tasks/hg_rake.html","","<p># TODO: this is nearly identical to git.rake. DRY up?\n<p># This trick lets us access the Hg plugin within …\n"],["svn.rake","","lib/capistrano/scm/tasks/svn_rake.html","","<p># TODO: this is nearly identical to git.rake. DRY up?\n<p># This trick lets us access the Svn plugin within …\n"],["console.rake","","lib/capistrano/tasks/console_rake.html","","<p>desc “Execute remote commands” task :console do\n\n<pre>stage = fetch(:stage)\nputs I18n.t(&quot;console.welcome&quot;, ...</pre>\n"],["deploy.rake","","lib/capistrano/tasks/deploy_rake.html","","<p>namespace :deploy do\n\n<pre>task :starting do\n  invoke &quot;deploy:print_config_variables&quot; if fetch(:print_config_variables, ...</pre>\n"],["doctor.rake","","lib/capistrano/tasks/doctor_rake.html","","<p>desc “Display a Capistrano troubleshooting report (all doctor: tasks)” task\ndoctor: [“doctor:environment”, …\n"],["framework.rake","","lib/capistrano/tasks/framework_rake.html","","<p>namespace :deploy do\n\n<pre>desc &quot;Start a deployment, make sure server(s) ready.&quot;\ntask :starting do\nend\n\ndesc ...</pre>\n"],["install.rake","","lib/capistrano/tasks/install_rake.html","","<p>require “erb” require “pathname” desc “Install Capistrano, cap install\nSTAGES=staging,production” …\n"],["Capfile","","lib/capistrano/templates/Capfile.html","","<p># Load DSL and set up stages require “capistrano/setup”\n<p># Include default deployment tasks require …\n"]]}}