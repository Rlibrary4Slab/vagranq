<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Action Controller: Exception caught</title>
  <style>
    body {
      background-color: #FAFAFA;
      color: #333;
      margin: 0px;
    }

    body, p, ol, ul, td {
      font-family: helvetica, verdana, arial, sans-serif;
      font-size:   13px;
      line-height: 18px;
    }

    pre {
      font-size: 11px;
      white-space: pre-wrap;
    }

    pre.box {
      border: 1px solid #EEE;
      padding: 10px;
      margin: 0px;
      width: 958px;
    }

    header {
      color: #F0F0F0;
      background: #C52F24;
      padding: 0.5em 1.5em;
    }

    h1 {
      margin: 0.2em 0;
      line-height: 1.1em;
      font-size: 2em;
    }

    h2 {
      color: #C52F24;
      line-height: 25px;
    }

    .details {
      border: 1px solid #D0D0D0;
      border-radius: 4px;
      margin: 1em 0px;
      display: block;
      width: 978px;
    }

    .summary {
      padding: 8px 15px;
      border-bottom: 1px solid #D0D0D0;
      display: block;
    }

    .details pre {
      margin: 5px;
      border: none;
    }

    #container {
      box-sizing: border-box;
      width: 100%;
      padding: 0 1.5em;
    }

    .source * {
      margin: 0px;
      padding: 0px;
    }

    .source {
      border: 1px solid #D9D9D9;
      background: #ECECEC;
      width: 978px;
    }

    .source pre {
      padding: 10px 0px;
      border: none;
    }

    .source .data {
      font-size: 80%;
      overflow: auto;
      background-color: #FFF;
    }

    .info {
      padding: 0.5em;
    }

    .source .data .line_numbers {
      background-color: #ECECEC;
      color: #AAA;
      padding: 1em .5em;
      border-right: 1px solid #DDD;
      text-align: right;
    }

    .line {
      padding-left: 10px;
    }

    .line:hover {
      background-color: #F6F6F6;
    }

    .line.active {
      background-color: #FFCCCC;
    }

    .hidden {
      display: none;
    }

    a { color: #980905; }
    a:visited { color: #666; }
    a.trace-frames { color: #666; }
    a:hover { color: #C52F24; }
    a.trace-frames.selected { color: #C52F24 }

    
  </style>

  <script>
    var toggle = function(id) {
      var s = document.getElementById(id).style;
      s.display = s.display == 'none' ? 'block' : 'none';
      return false;
    }
    var show = function(id) {
      document.getElementById(id).style.display = 'block';
    }
    var hide = function(id) {
      document.getElementById(id).style.display = 'none';
    }
    var toggleTrace = function() {
      return toggle('blame_trace');
    }
    var toggleSessionDump = function() {
      return toggle('session_dump');
    }
    var toggleEnvDump = function() {
      return toggle('env_dump');
    }
  </script>
</head>
<body>

<header>
  <h1>
    NoMethodError
  </h1>
</header>

<div id="container">
  <h2>undefined method `call&#39; for Users:Module
Did you mean?  caller</h2>

      <div class="source " id="frame-source-0">
      <div class="info">
        Extracted source (around line <strong>#227</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>225</span>
<span>226</span>
<span>227</span>
<span>228</span>
<span>229</span>
<span>230</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      env[Grape::Env::API_ENDPOINT] = self
</div><div class="line">      @env = env
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Return the collection of endpoints within this endpoint.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-1">
      <div class="info">
        Extracted source (around line <strong>#221</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>219</span>
<span>220</span>
<span>221</span>
<span>222</span>
<span>223</span>
<span>224</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      lazy_initialize!
</div><div class="line active">      dup.call!(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def call!(env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-2">
      <div class="info">
        Extracted source (around line <strong>#157</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>155</span>
<span>156</span>
<span>157</span>
<span>158</span>
<span>159</span>
<span>160</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call_with_allow_headers(env, methods, endpoint)
</div><div class="line">      env[Grape::Env::GRAPE_ALLOWED_METHODS] = methods
</div><div class="line active">      endpoint.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def cascade?(response)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-3">
      <div class="info">
        Extracted source (around line <strong>#112</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>110</span>
<span>111</span>
<span>112</span>
<span>113</span>
<span>114</span>
<span>115</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      !cascade &amp;&amp; neighbor ? call_with_allow_headers(env, neighbor.allow_header, neighbor.endpoint) : nil
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def process_route(route, env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-4">
      <div class="info">
        Extracted source (around line <strong>#72</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>70</span>
<span>71</span>
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def identity(env)
</div><div class="line">      route = nil
</div><div class="line active">      response = transaction(env) do |input, method|
</div><div class="line">        route = match?(input, method)
</div><div class="line">        process_route(route, env) if route
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-5">
      <div class="info">
        Extracted source (around line <strong>#57</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>55</span>
<span>56</span>
<span>57</span>
<span>58</span>
<span>59</span>
<span>60</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      with_optimization do
</div><div class="line active">        response, route = identity(env)
</div><div class="line">        response || rotation(env, route)
</div><div class="line">      end
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-6">
      <div class="info">
        Extracted source (around line <strong>#135</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>133</span>
<span>134</span>
<span>135</span>
<span>136</span>
<span>137</span>
<span>138</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def with_optimization
</div><div class="line">      compile! unless compiled
</div><div class="line active">      yield || default_response
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def default_response
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-7">
      <div class="info">
        Extracted source (around line <strong>#56</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>54</span>
<span>55</span>
<span>56</span>
<span>57</span>
<span>58</span>
<span>59</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      with_optimization do
</div><div class="line">        response, route = identity(env)
</div><div class="line">        response || rotation(env, route)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-8">
      <div class="info">
        Extracted source (around line <strong>#119</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>117</span>
<span>118</span>
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    # Handle a request. See Rack documentation for what `env` is.
</div><div class="line">    def call(env)
</div><div class="line active">      result = @router.call(env)
</div><div class="line">      result[1].delete(Grape::Http::Headers::X_CASCADE) unless cascade?
</div><div class="line">      result
</div><div class="line">    end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-9">
      <div class="info">
        Extracted source (around line <strong>#45</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>43</span>
<span>44</span>
<span>45</span>
<span>46</span>
<span>47</span>
<span>48</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      # A non-synchronized version of ::call.
</div><div class="line">      def call!(env)
</div><div class="line active">        instance.call(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # (see #cascade?)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-10">
      <div class="info">
        Extracted source (around line <strong>#40</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
<span>43</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      def call(env)
</div><div class="line">        LOCK.synchronize { compile } unless instance
</div><div class="line active">        call!(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      # A non-synchronized version of ::call.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-11">
      <div class="info">
        Extracted source (around line <strong>#51</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>49</span>
<span>50</span>
<span>51</span>
<span>52</span>
<span>53</span>
<span>54</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">            @app.serve req
</div><div class="line">          else
</div><div class="line active">            @app.call req.env
</div><div class="line">          end
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-12">
      <div class="info">
        Extracted source (around line <strong>#43</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>41</span>
<span>42</span>
<span>43</span>
<span>44</span>
<span>45</span>
<span>46</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          req.path_parameters = set_params.merge parameters
</div><div class="line">
</div><div class="line active">          status, headers, body = route.app.serve(req)
</div><div class="line">
</div><div class="line">          if &#39;pass&#39; == headers[&#39;X-Cascade&#39;]
</div><div class="line">            req.script_name     = script_name
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-13">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      def serve(req)
</div><div class="line active">        find_routes(req).each do |match, parameters, route|
</div><div class="line">          set_params  = req.path_parameters
</div><div class="line">          path_info   = req.path_info
</div><div class="line">          script_name = req.script_name
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-14">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      def serve(req)
</div><div class="line active">        find_routes(req).each do |match, parameters, route|
</div><div class="line">          set_params  = req.path_parameters
</div><div class="line">          path_info   = req.path_info
</div><div class="line">          script_name = req.script_name
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-15">
      <div class="info">
        Extracted source (around line <strong>#817</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>815</span>
<span>816</span>
<span>817</span>
<span>818</span>
<span>819</span>
<span>820</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        req = request_class.new(env)
</div><div class="line">        req.path_info = Journey::Router::Utils.normalize_path(req.path_info)
</div><div class="line active">        @router.serve(req)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def recognize_path(path, environment = {})
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-16">
      <div class="info">
        Extracted source (around line <strong>#12</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>10</span>
<span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      return [status, headers, body] unless pjax?(env)
</div><div class="line">
</div><div class="line">      headers = HeaderHash.new(headers)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-17">
      <div class="info">
        Extracted source (around line <strong>#260</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>258</span>
<span>259</span>
<span>260</span>
<span>261</span>
<span>262</span>
<span>263</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @app.call(env)
</div><div class="line">    ensure
</div><div class="line">      session    = Request::Session.find(env) || {}
</div><div class="line">      flash_hash = env[KEY]
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-18">
      <div class="info">
        Extracted source (around line <strong>#189</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>187</span>
<span>188</span>
<span>189</span>
<span>190</span>
<span>191</span>
<span>192</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      return callback_call if on_callback_path?
</div><div class="line">      return other_phase if respond_to?(:other_phase)
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Responds to an OPTIONS request.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-19">
      <div class="info">
        Extracted source (around line <strong>#167</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>165</span>
<span>166</span>
<span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    # @param [Hash] The Rack environment.
</div><div class="line">    def call(env)
</div><div class="line active">      dup.call!(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The logic for dispatching any additional actions that need
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-20">
      <div class="info">
        Extracted source (around line <strong>#189</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>187</span>
<span>188</span>
<span>189</span>
<span>190</span>
<span>191</span>
<span>192</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      return callback_call if on_callback_path?
</div><div class="line">      return other_phase if respond_to?(:other_phase)
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Responds to an OPTIONS request.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-21">
      <div class="info">
        Extracted source (around line <strong>#167</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>165</span>
<span>166</span>
<span>167</span>
<span>168</span>
<span>169</span>
<span>170</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    # @param [Hash] The Rack environment.
</div><div class="line">    def call(env)
</div><div class="line active">      dup.call!(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The logic for dispatching any additional actions that need
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-22">
      <div class="info">
        Extracted source (around line <strong>#36</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      env[&#39;warden&#39;] = Proxy.new(env, self)
</div><div class="line">      result = catch(:warden) do
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      result ||= {}
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-23">
      <div class="info">
        Extracted source (around line <strong>#35</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      env[&#39;warden&#39;] = Proxy.new(env, self)
</div><div class="line active">      result = catch(:warden) do
</div><div class="line">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-24">
      <div class="info">
        Extracted source (around line <strong>#35</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">      env[&#39;warden&#39;] = Proxy.new(env, self)
</div><div class="line active">      result = catch(:warden) do
</div><div class="line">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-25">
      <div class="info">
        Extracted source (around line <strong>#24</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">      if etag_status?(status) &amp;&amp; etag_body?(body) &amp;&amp; !skip_caching?(headers)
</div><div class="line">        original_body = body
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-26">
      <div class="info">
        Extracted source (around line <strong>#25</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>23</span>
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      case env[REQUEST_METHOD]
</div><div class="line">      when &quot;GET&quot;, &quot;HEAD&quot;
</div><div class="line active">        status, headers, body = @app.call(env)
</div><div class="line">        headers = Utils::HeaderHash.new(headers)
</div><div class="line">        if status == 200 &amp;&amp; fresh?(env, headers)
</div><div class="line">          status = 304
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-27">
      <div class="info">
        Extracted source (around line <strong>#16</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      env[&quot;rack.woothee&quot;] = ::Woothee.parse(env[&quot;HTTP_USER_AGENT&quot;] || &quot;&quot;)
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-28">
      <div class="info">
        Extracted source (around line <strong>#13</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>11</span>
<span>12</span>
<span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">  def call(env)
</div><div class="line active">    status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">    if env[REQUEST_METHOD] == HEAD
</div><div class="line">      [
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-29">
      <div class="info">
        Extracted source (around line <strong>#32</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
<span>34</span>
<span>35</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-30">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-31">
      <div class="info">
        Extracted source (around line <strong>#260</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>258</span>
<span>259</span>
<span>260</span>
<span>261</span>
<span>262</span>
<span>263</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @app.call(env)
</div><div class="line">    ensure
</div><div class="line">      session    = Request::Session.find(env) || {}
</div><div class="line">      flash_hash = env[KEY]
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-32">
      <div class="info">
        Extracted source (around line <strong>#225</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>223</span>
<span>224</span>
<span>225</span>
<span>226</span>
<span>227</span>
<span>228</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        def context(env, app=@app)
</div><div class="line">          prepare_session(env)
</div><div class="line active">          status, headers, body = app.call(env)
</div><div class="line">          commit_session(env, status, headers, body)
</div><div class="line">        end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-33">
      <div class="info">
        Extracted source (around line <strong>#220</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>218</span>
<span>219</span>
<span>220</span>
<span>221</span>
<span>222</span>
<span>223</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">        def call(env)
</div><div class="line active">          context(env)
</div><div class="line">        end
</div><div class="line">
</div><div class="line">        def context(env, app=@app)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-34">
      <div class="info">
        Extracted source (around line <strong>#560</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>558</span>
<span>559</span>
<span>560</span>
<span>561</span>
<span>562</span>
<span>563</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">
</div><div class="line">      if cookie_jar = env[&#39;action_dispatch.cookies&#39;]
</div><div class="line">        unless cookie_jar.committed?
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-35">
      <div class="info">
        Extracted source (around line <strong>#36</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>34</span>
<span>35</span>
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      connection.enable_query_cache!
</div><div class="line">
</div><div class="line active">      response = @app.call(env)
</div><div class="line">      response[2] = Rack::BodyProxy.new(response[2]) do
</div><div class="line">        restore_query_cache_settings(connection_id, enabled)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-36">
      <div class="info">
        Extracted source (around line <strong>#653</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>651</span>
<span>652</span>
<span>653</span>
<span>654</span>
<span>655</span>
<span>656</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        testing = env[&#39;rack.test&#39;]
</div><div class="line">
</div><div class="line active">        response = @app.call(env)
</div><div class="line">        response[2] = ::Rack::BodyProxy.new(response[2]) do
</div><div class="line">          ActiveRecord::Base.clear_active_connections! unless testing
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-37">
      <div class="info">
        Extracted source (around line <strong>#377</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>375</span>
<span>376</span>
<span>377</span>
<span>378</span>
<span>379</span>
<span>380</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          end
</div><div class="line">        end
</div><div class="line active">        @app.call(env)
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-38">
      <div class="info">
        Extracted source (around line <strong>#29</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      result = run_callbacks :call do
</div><div class="line">        begin
</div><div class="line active">          @app.call(env)
</div><div class="line">        rescue =&gt; error
</div><div class="line">        end
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-39">
      <div class="info">
        Extracted source (around line <strong>#88</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>86</span>
<span>87</span>
<span>88</span>
<span>89</span>
<span>90</span>
<span>91</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def __run_callbacks__(callbacks, &amp;block)
</div><div class="line">      if callbacks.empty?
</div><div class="line active">        yield if block_given?
</div><div class="line">      else
</div><div class="line">        runner = callbacks.compile
</div><div class="line">        e = Filters::Environment.new(self, false, nil, block)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-40">
      <div class="info">
        Extracted source (around line <strong>#778</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>776</span>
<span>777</span>
<span>778</span>
<span>779</span>
<span>780</span>
<span>781</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          module_eval &lt;&lt;-RUBY, __FILE__, __LINE__ + 1
</div><div class="line">            def _run_#{name}_callbacks(&amp;block)
</div><div class="line active">              __run_callbacks__(_#{name}_callbacks, &amp;block)
</div><div class="line">            end
</div><div class="line">          RUBY
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-41">
      <div class="info">
        Extracted source (around line <strong>#81</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>79</span>
<span>80</span>
<span>81</span>
<span>82</span>
<span>83</span>
<span>84</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    #   end
</div><div class="line">    def run_callbacks(kind, &amp;block)
</div><div class="line active">      send &quot;_run_#{kind}_callbacks&quot;, &amp;block
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-42">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      error = nil
</div><div class="line active">      result = run_callbacks :call do
</div><div class="line">        begin
</div><div class="line">          @app.call(env)
</div><div class="line">        rescue =&gt; error
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-43">
      <div class="info">
        Extracted source (around line <strong>#73</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>71</span>
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      prepare!
</div><div class="line">
</div><div class="line active">      response = @app.call(env)
</div><div class="line">      response[2] = ::Rack::BodyProxy.new(response[2]) { cleanup! }
</div><div class="line">
</div><div class="line">      response
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-44">
      <div class="info">
        Extracted source (around line <strong>#78</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>76</span>
<span>77</span>
<span>78</span>
<span>79</span>
<span>80</span>
<span>81</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      env[&quot;action_dispatch.remote_ip&quot;] = GetIp.new(env, self)
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The GetIp class exists as a way to defer processing of the request data
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-45">
      <div class="info">
        Extracted source (around line <strong>#17</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      _, headers, body = response = @app.call(env)
</div><div class="line">
</div><div class="line">      if headers[&#39;X-Cascade&#39;] == &#39;pass&#39;
</div><div class="line">        body.close if body.respond_to?(:close)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-46">
      <div class="info">
        Extracted source (around line <strong>#30</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
<span>32</span>
<span>33</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      @app.call(env)
</div><div class="line">    rescue Exception =&gt; exception
</div><div class="line">      if env[&#39;action_dispatch.show_exceptions&#39;] == false
</div><div class="line">        raise exception
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-47">
      <div class="info">
        Extracted source (around line <strong>#38</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>36</span>
<span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        instrumenter.start &#39;request.action_dispatch&#39;, request: request
</div><div class="line">        logger.info { started_request_message(request) }
</div><div class="line active">        resp = @app.call(env)
</div><div class="line">        resp[2] = ::Rack::BodyProxy.new(resp[2]) { finish(request) }
</div><div class="line">        resp
</div><div class="line">      rescue Exception
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-48">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">        if logger.respond_to?(:tagged)
</div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
</div><div class="line">        else
</div><div class="line">          call_app(request, env)
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-49">
      <div class="info">
        Extracted source (around line <strong>#68</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>66</span>
<span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
<span>71</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def tagged(*tags)
</div><div class="line active">      formatter.tagged(*tags) { yield self }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def flush
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-50">
      <div class="info">
        Extracted source (around line <strong>#26</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>24</span>
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      def tagged(*tags)
</div><div class="line">        new_tags = push_tags(*tags)
</div><div class="line active">        yield self
</div><div class="line">      ensure
</div><div class="line">        pop_tags(new_tags.size)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-51">
      <div class="info">
        Extracted source (around line <strong>#68</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>66</span>
<span>67</span>
<span>68</span>
<span>69</span>
<span>70</span>
<span>71</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def tagged(*tags)
</div><div class="line active">      formatter.tagged(*tags) { yield self }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def flush
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-52">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">        if logger.respond_to?(:tagged)
</div><div class="line active">          logger.tagged(compute_tags(request)) { call_app(request, env) }
</div><div class="line">        else
</div><div class="line">          call_app(request, env)
</div><div class="line">        end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-53">
      <div class="info">
        Extracted source (around line <strong>#21</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      env[&quot;action_dispatch.request_id&quot;] = external_request_id(env) || internal_request_id
</div><div class="line active">      @app.call(env).tap { |_status, headers, _body| headers[&quot;X-Request-Id&quot;] = env[&quot;action_dispatch.request_id&quot;] }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    private
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-54">
      <div class="info">
        Extracted source (around line <strong>#22</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
<span>24</span>
<span>25</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def method_override(env)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-55">
      <div class="info">
        Extracted source (around line <strong>#18</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>16</span>
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def call(env)
</div><div class="line">      start_time = clock_time
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      request_time = clock_time - start_time
</div><div class="line">
</div><div class="line">      if !headers.has_key?(@header_name)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-56">
      <div class="info">
        Extracted source (around line <strong>#28</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
<span>31</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          def call(env)
</div><div class="line">            LocalCacheRegistry.set_cache_for(local_cache_key, LocalStore.new)
</div><div class="line active">            response = @app.call(env)
</div><div class="line">            response[2] = ::Rack::BodyProxy.new(response[2]) do
</div><div class="line">              LocalCacheRegistry.set_cache_for(local_cache_key, nil)
</div><div class="line">            end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-57">
      <div class="info">
        Extracted source (around line <strong>#120</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>118</span>
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
<span>123</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      @app.call(env)
</div><div class="line">    end
</div><div class="line">  end
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-58">
      <div class="info">
        Extracted source (around line <strong>#113</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>111</span>
<span>112</span>
<span>113</span>
<span>114</span>
<span>115</span>
<span>116</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      if body.respond_to?(:to_path)
</div><div class="line">        case type = variation(env)
</div><div class="line">        when &#39;X-Accel-Redirect&#39;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-59">
      <div class="info">
        Extracted source (around line <strong>#282</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>280</span>
<span>281</span>
<span>282</span>
<span>283</span>
<span>284</span>
<span>285</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          end
</div><div class="line">        else
</div><div class="line active">          status,headers,body = @app.call(env)
</div><div class="line">        end
</div><div class="line">      ensure
</div><div class="line">        trace.disable if trace
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-60">
      <div class="info">
        Extracted source (around line <strong>#518</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>516</span>
<span>517</span>
<span>518</span>
<span>519</span>
<span>520</span>
<span>521</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        env[&quot;ROUTES_#{routes.object_id}_SCRIPT_NAME&quot;] = env[&#39;SCRIPT_NAME&#39;].dup
</div><div class="line">      end
</div><div class="line active">      app.call(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Defines additional Rack env configuration that is added on each call.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-61">
      <div class="info">
        Extracted source (around line <strong>#165</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>163</span>
<span>164</span>
<span>165</span>
<span>166</span>
<span>167</span>
<span>168</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      env[&quot;ORIGINAL_FULLPATH&quot;] = build_original_fullpath(env)
</div><div class="line">      env[&quot;ORIGINAL_SCRIPT_NAME&quot;] = env[&quot;SCRIPT_NAME&quot;]
</div><div class="line active">      super(env)
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # Reload application routes regardless if they changed or not.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-62">
      <div class="info">
        Extracted source (around line <strong>#15</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>13</span>
<span>14</span>
<span>15</span>
<span>16</span>
<span>17</span>
<span>18</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def call(env)
</div><div class="line active">      status, headers, body = @app.call(env)
</div><div class="line">      headers = HeaderHash.new(headers)
</div><div class="line">
</div><div class="line">      if !STATUS_WITH_NO_ENTITY_BODY.include?(status.to_i) &amp;&amp;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-63">
      <div class="info">
        Extracted source (around line <strong>#86</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>84</span>
<span>85</span>
<span>86</span>
<span>87</span>
<span>88</span>
<span>89</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      catch(:async) do
</div><div class="line">        # Process the request calling the Rack adapter
</div><div class="line active">        response = @app.call(@request.env)
</div><div class="line">      end
</div><div class="line">      response
</div><div class="line">    rescue Exception =&gt; e
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-64">
      <div class="info">
        Extracted source (around line <strong>#84</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>82</span>
<span>83</span>
<span>84</span>
<span>85</span>
<span>86</span>
<span>87</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      # in removing this.
</div><div class="line">      response = AsyncResponse
</div><div class="line active">      catch(:async) do
</div><div class="line">        # Process the request calling the Rack adapter
</div><div class="line">        response = @app.call(@request.env)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-65">
      <div class="info">
        Extracted source (around line <strong>#84</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>82</span>
<span>83</span>
<span>84</span>
<span>85</span>
<span>86</span>
<span>87</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      # in removing this.
</div><div class="line">      response = AsyncResponse
</div><div class="line active">      catch(:async) do
</div><div class="line">        # Process the request calling the Rack adapter
</div><div class="line">        response = @app.call(@request.env)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-66">
      <div class="info">
        Extracted source (around line <strong>#53</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>51</span>
<span>52</span>
<span>53</span>
<span>54</span>
<span>55</span>
<span>56</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      else
</div><div class="line">        @request.threaded = false
</div><div class="line active">        post_process(pre_process)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-67">
      <div class="info">
        Extracted source (around line <strong>#40</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
<span>43</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      @response.async = true
</div><div class="line">    end
</div><div class="line active">    thin_process
</div><div class="line">  end
</div><div class="line">
</div><div class="line">  def receive_data(data)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-68">
      <div class="info">
        Extracted source (around line <strong>#39</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      @idle = false
</div><div class="line">      trace data
</div><div class="line active">      process if @request.parse(data)
</div><div class="line">    rescue InvalidRequest =&gt; e
</div><div class="line">      log_error(&quot;Invalid request&quot;, e)
</div><div class="line">      post_process Response::BAD_REQUEST
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-69">
      <div class="info">
        Extracted source (around line <strong>#44</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>42</span>
<span>43</span>
<span>44</span>
<span>45</span>
<span>46</span>
<span>47</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">  def receive_data(data)
</div><div class="line active">    return thin_receive_data(data) unless @serving == :websocket
</div><div class="line">    socket_stream.receive(data) if socket_stream
</div><div class="line">  end
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-70">
      <div class="info">
        Extracted source (around line <strong>#194</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>192</span>
<span>193</span>
<span>194</span>
<span>195</span>
<span>196</span>
<span>197</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          while run_machine_once; end
</div><div class="line">        else
</div><div class="line active">          run_machine
</div><div class="line">        end
</div><div class="line">
</div><div class="line">      ensure
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-71">
      <div class="info">
        Extracted source (around line <strong>#194</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>192</span>
<span>193</span>
<span>194</span>
<span>195</span>
<span>196</span>
<span>197</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">          while run_machine_once; end
</div><div class="line">        else
</div><div class="line active">          run_machine
</div><div class="line">        end
</div><div class="line">
</div><div class="line">      ensure
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-72">
      <div class="info">
        Extracted source (around line <strong>#73</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>71</span>
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        else
</div><div class="line">          @started_reactor = true
</div><div class="line active">          EventMachine.run(&amp;starter)
</div><div class="line">        end
</div><div class="line">      end
</div><div class="line">      
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-73">
      <div class="info">
        Extracted source (around line <strong>#162</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>160</span>
<span>161</span>
<span>162</span>
<span>163</span>
<span>164</span>
<span>165</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      log_info &quot;Listening on #{@backend}, CTRL+C to stop&quot;
</div><div class="line">
</div><div class="line active">      @backend.start { setup_signals if @setup_signals }
</div><div class="line">    end
</div><div class="line">    alias :start! :start
</div><div class="line">    
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-74">
      <div class="info">
        Extracted source (around line <strong>#19</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>17</span>
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        server = ::Thin::Server.new(*args)
</div><div class="line">        yield server if block_given?
</div><div class="line active">        server.start
</div><div class="line">      end
</div><div class="line">
</div><div class="line">      def self.valid_options
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-75">
      <div class="info">
        Extracted source (around line <strong>#287</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>285</span>
<span>286</span>
<span>287</span>
<span>288</span>
<span>289</span>
<span>290</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      end
</div><div class="line">
</div><div class="line active">      server.run wrapped_app, options, &amp;blk
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def server
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-76">
      <div class="info">
        Extracted source (around line <strong>#80</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>78</span>
<span>79</span>
<span>80</span>
<span>81</span>
<span>82</span>
<span>83</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      log_to_stdout if options[:log_stdout]
</div><div class="line">
</div><div class="line active">      super
</div><div class="line">    ensure
</div><div class="line">      # The &#39;-h&#39; option calls exit before @options is set.
</div><div class="line">      # If we call &#39;options&#39; with it unset, we get double help banners.
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-77">
      <div class="info">
        Extracted source (around line <strong>#80</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>78</span>
<span>79</span>
<span>80</span>
<span>81</span>
<span>82</span>
<span>83</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">        require APP_PATH
</div><div class="line">        Dir.chdir(Rails.application.root)
</div><div class="line active">        server.start
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-78">
      <div class="info">
        Extracted source (around line <strong>#75</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
<span>77</span>
<span>78</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      require_command!(&quot;server&quot;)
</div><div class="line">
</div><div class="line active">      Rails::Server.new.tap do |server|
</div><div class="line">        # We need to require application after the server sets environment,
</div><div class="line">        # otherwise the --environment option given to the server won&#39;t propagate.
</div><div class="line">        require APP_PATH
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-79">
      <div class="info">
        Extracted source (around line <strong>#75</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
<span>77</span>
<span>78</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      require_command!(&quot;server&quot;)
</div><div class="line">
</div><div class="line active">      Rails::Server.new.tap do |server|
</div><div class="line">        # We need to require application after the server sets environment,
</div><div class="line">        # otherwise the --environment option given to the server won&#39;t propagate.
</div><div class="line">        require APP_PATH
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-80">
      <div class="info">
        Extracted source (around line <strong>#39</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>37</span>
<span>38</span>
<span>39</span>
<span>40</span>
<span>41</span>
<span>42</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      command = parse_command(command)
</div><div class="line">      if COMMAND_WHITELIST.include?(command)
</div><div class="line active">        send(command)
</div><div class="line">      else
</div><div class="line">        write_error_message(command)
</div><div class="line">      end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-81">
      <div class="info">
        Extracted source (around line <strong>#17</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>15</span>
<span>16</span>
<span>17</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">require &#39;rails/commands/commands_tasks&#39;
</div><div class="line">
</div><div class="line active">Rails::CommandsTasks.new(ARGV).run_command!(command)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-82">
      <div class="info">
        Extracted source (around line <strong>#9</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>7</span>
<span>8</span>
<span>9</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">APP_PATH = File.expand_path(&#39;../../config/application&#39;, __FILE__)
</div><div class="line">require_relative &#39;../config/boot&#39;
</div><div class="line active">require &#39;rails/commands&#39;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-83">
      <div class="info">
        Extracted source (around line <strong>#9</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>7</span>
<span>8</span>
<span>9</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">APP_PATH = File.expand_path(&#39;../../config/application&#39;, __FILE__)
</div><div class="line">require_relative &#39;../config/boot&#39;
</div><div class="line active">require &#39;rails/commands&#39;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-84">
      <div class="info">
        Extracted source (around line <strong>#74</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
<span>77</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      signals = Signal.list.keys - RESERVED_SIGNALS
</div><div class="line">      signals.each {|s| trap(s, &quot;DEFAULT&quot;) }
</div><div class="line active">      Kernel.load(file)
</div><div class="line">    rescue SystemExit
</div><div class="line">      raise
</div><div class="line">    rescue Exception =&gt; e # rubocop:disable Lint/RescueException
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-85">
      <div class="info">
        Extracted source (around line <strong>#74</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>72</span>
<span>73</span>
<span>74</span>
<span>75</span>
<span>76</span>
<span>77</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      signals = Signal.list.keys - RESERVED_SIGNALS
</div><div class="line">      signals.each {|s| trap(s, &quot;DEFAULT&quot;) }
</div><div class="line active">      Kernel.load(file)
</div><div class="line">    rescue SystemExit
</div><div class="line">      raise
</div><div class="line">    rescue Exception =&gt; e # rubocop:disable Lint/RescueException
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-86">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      if bin_path = Bundler.which(cmd)
</div><div class="line">        if !Bundler.settings[:disable_exec_load] &amp;&amp; ruby_shebang?(bin_path)
</div><div class="line active">          return kernel_load(bin_path, *args)
</div><div class="line">        end
</div><div class="line">        # First, try to exec directly to something in PATH
</div><div class="line">        if Bundler.current_ruby.jruby_18?
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-87">
      <div class="info">
        Extracted source (around line <strong>#360</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>358</span>
<span>359</span>
<span>360</span>
<span>361</span>
<span>362</span>
<span>363</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">    def exec(*args)
</div><div class="line">      require &quot;bundler/cli/exec&quot;
</div><div class="line active">      Exec.new(options, args).run
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    desc &quot;config NAME [VALUE]&quot;, &quot;retrieve or set a configuration value&quot;
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-88">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      elsif public_method?(instance)
</div><div class="line">        arity = instance.method(name).arity
</div><div class="line active">        instance.__send__(name, *args)
</div><div class="line">      elsif local_method?(instance, :method_missing)
</div><div class="line">        instance.__send__(:method_missing, name.to_sym, *args)
</div><div class="line">      else
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-89">
      <div class="info">
        Extracted source (around line <strong>#126</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>124</span>
<span>125</span>
<span>126</span>
<span>127</span>
<span>128</span>
<span>129</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      unless current.include?(command.name)
</div><div class="line">        current &lt;&lt; command.name
</div><div class="line active">        command.run(self, *args)
</div><div class="line">      end
</div><div class="line">    end
</div><div class="line">    alias_method :invoke_task, :invoke_command
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-90">
      <div class="info">
        Extracted source (around line <strong>#369</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>367</span>
<span>368</span>
<span>369</span>
<span>370</span>
<span>371</span>
<span>372</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      args = instance.args
</div><div class="line">      trailing = args[Range.new(arguments.size, -1)]
</div><div class="line active">      instance.invoke_command(command, trailing || [])
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    # The banner for this class. You can customize it if you are invoking the
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-91">
      <div class="info">
        Extracted source (around line <strong>#20</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>18</span>
<span>19</span>
<span>20</span>
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def self.dispatch(*)
</div><div class="line active">      super {|i| i.send(:print_command) }
</div><div class="line">    end
</div><div class="line">
</div><div class="line">    def initialize(*args)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-92">
      <div class="info">
        Extracted source (around line <strong>#444</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>442</span>
<span>443</span>
<span>444</span>
<span>445</span>
<span>446</span>
<span>447</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">      def start(given_args = ARGV, config = {})
</div><div class="line">        config[:shell] ||= Bundler::Thor::Base.shell.new
</div><div class="line active">        dispatch(nil, given_args.dup, nil, config)
</div><div class="line">      rescue Bundler::Thor::Error =&gt; e
</div><div class="line">        config[:debug] || ENV[&quot;THOR_DEBUG&quot;] == &quot;1&quot; ? (raise e) : config[:shell].error(e.message)
</div><div class="line">        exit(1) if exit_on_failure?
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-93">
      <div class="info">
        Extracted source (around line <strong>#10</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>8</span>
<span>9</span>
<span>10</span>
<span>11</span>
<span>12</span>
<span>13</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">    def self.start(*)
</div><div class="line active">      super
</div><div class="line">    rescue Exception =&gt; e
</div><div class="line">      Bundler.ui = UI::Shell.new
</div><div class="line">      raise e
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-94">
      <div class="info">
        Extracted source (around line <strong>#35</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>33</span>
<span>34</span>
<span>35</span>
<span>36</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">  args = help_flag_used ? Bundler::CLI.reformatted_help_args(ARGV) : ARGV
</div><div class="line">
</div><div class="line active">  Bundler::CLI.start(args, :debug =&gt; true)
</div><div class="line">end
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-95">
      <div class="info">
        Extracted source (around line <strong>#121</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>119</span>
<span>120</span>
<span>121</span>
<span>122</span>
<span>123</span>
<span>124</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">  def self.with_friendly_errors
</div><div class="line active">    yield
</div><div class="line">  rescue Exception =&gt; e
</div><div class="line">    FriendlyErrors.log_error(e)
</div><div class="line">    exit FriendlyErrors.exit_status(e)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-96">
      <div class="info">
        Extracted source (around line <strong>#27</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>25</span>
<span>26</span>
<span>27</span>
<span>28</span>
<span>29</span>
<span>30</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">require &quot;bundler/friendly_errors&quot;
</div><div class="line active">Bundler.with_friendly_errors do
</div><div class="line">  require &quot;bundler/cli&quot;
</div><div class="line">
</div><div class="line">  # Allow any command to use --help flag to show help for that command
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-97">
      <div class="info">
        Extracted source (around line <strong>#23</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">gem &#39;bundler&#39;, version
</div><div class="line active">load Gem.bin_path(&#39;bundler&#39;, &#39;bundle&#39;, version)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>
    <div class="source hidden" id="frame-source-98">
      <div class="info">
        Extracted source (around line <strong>#23</strong>):
      </div>
      <div class="data">
        <table cellpadding="0" cellspacing="0" class="lines">
          <tr>
            <td>
              <pre class="line_numbers">
<span>21</span>
<span>22</span>
<span>23</span>
              </pre>
            </td>
<td width="100%">
<pre>
<div class="line">
</div><div class="line">gem &#39;bundler&#39;, version
</div><div class="line active">load Gem.bin_path(&#39;bundler&#39;, &#39;bundle&#39;, version)
</div>
</pre>
</td>
          </tr>
        </table>
      </div>
    </div>

  
<p><code>Rails.root: /home/vagrant/ranq/vagranq</code></p>

<div id="traces">
    <a href="#" onclick="hide(&#39;Framework-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Application-Trace&#39;);; return false;">Application Trace</a> |
    <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Full-Trace&#39;);show(&#39;Framework-Trace&#39;);; return false;">Framework Trace</a> |
    <a href="#" onclick="hide(&#39;Application-Trace&#39;);hide(&#39;Framework-Trace&#39;);show(&#39;Full-Trace&#39;);; return false;">Full Trace</a> 

    <div id="Application-Trace" style="display: none;">
      <pre><code></code></pre>
    </div>
    <div id="Framework-Trace" style="display: none;">
      <pre><code><a class="trace-frames" data-frame-id="0" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/endpoint.rb:227:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/endpoint.rb:221:in `call&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:157:in `call_with_allow_headers&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:112:in `transaction&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:72:in `identity&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:57:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:135:in `with_optimization&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:56:in `call&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:119:in `call&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:45:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:40:in `call&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/mapper.rb:51:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:43:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:30:in `each&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:30:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/route_set.rb:817:in `call&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">vendor/bundles/ruby/2.3.0/gems/rack-pjax-1.0.0/lib/rack/pjax.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/flash.rb:260:in `call&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:189:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:167:in `call&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:189:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:167:in `call&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:36:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:35:in `catch&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:35:in `call&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/etag.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/conditionalget.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">vendor/bundles/ruby/2.3.0/gems/rack-user_agent-0.5.2/lib/rack/user_agent.rb:16:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/head.rb:13:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">vendor/bundles/ruby/2.3.0/gems/remotipart-1.3.1/lib/remotipart/middleware.rb:32:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/params_parser.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/flash.rb:260:in `call&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/session/abstract/id.rb:225:in `context&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/session/abstract/id.rb:220:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/cookies.rb:560:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/query_cache.rb:36:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:653:in `call&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/migration.rb:377:in `call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:88:in `__run_callbacks__&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:778:in `_run_call_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:81:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/callbacks.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/reloader.rb:73:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/remote_ip.rb:78:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:38:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:20:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:68:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:68:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:20:in `call&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/request_id.rb:21:in `call&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/methodoverride.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/runtime.rb:18:in `call&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/static.rb:120:in `call&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/sendfile.rb:113:in `call&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">vendor/bundles/ruby/2.3.0/gems/rack-mini-profiler-0.10.5/lib/mini_profiler/profiler.rb:282:in `call&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/engine.rb:518:in `call&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/application.rb:165:in `call&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/content_length.rb:15:in `call&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:86:in `block in pre_process&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:84:in `catch&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:84:in `pre_process&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:53:in `process&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">vendor/bundles/ruby/2.3.0/gems/faye-websocket-0.10.0/lib/faye/adapters/thin.rb:40:in `process&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:39:in `receive_data&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">vendor/bundles/ruby/2.3.0/gems/faye-websocket-0.10.0/lib/faye/adapters/thin.rb:44:in `receive_data&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">vendor/bundles/ruby/2.3.0/gems/eventmachine-1.2.3/lib/eventmachine.rb:194:in `run_machine&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">vendor/bundles/ruby/2.3.0/gems/eventmachine-1.2.3/lib/eventmachine.rb:194:in `run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/backends/base.rb:73:in `start&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/server.rb:162:in `start&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/handler/thin.rb:19:in `run&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/server.rb:287:in `start&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/server.rb:80:in `start&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:80:in `block in server&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:75:in `tap&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:75:in `server&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:39:in `run_command!&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands.rb:17:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">bin/rails:9:in `require&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">bin/rails:9:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:74:in `load&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:74:in `kernel_load&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:27:in `run&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">bundler (1.15.1) lib/bundler/cli.rb:360:in `exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor.rb:369:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">bundler (1.15.1) lib/bundler/cli.rb:20:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/base.rb:444:in `start&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">bundler (1.15.1) lib/bundler/cli.rb:10:in `start&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">bundler (1.15.1) exe/bundle:35:in `block in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">bundler (1.15.1) lib/bundler/friendly_errors.rb:121:in `with_friendly_errors&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">bundler (1.15.1) exe/bundle:27:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">/home/vagrant/.rbenv/versions/2.3.1/bin/bundle:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">/home/vagrant/.rbenv/versions/2.3.1/bin/bundle:23:in `&lt;main&gt;&#39;</a><br></code></pre>
    </div>
    <div id="Full-Trace" style="display: block;">
      <pre><code><a class="trace-frames" data-frame-id="0" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/endpoint.rb:227:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="1" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/endpoint.rb:221:in `call&#39;</a><br><a class="trace-frames" data-frame-id="2" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:157:in `call_with_allow_headers&#39;</a><br><a class="trace-frames" data-frame-id="3" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:112:in `transaction&#39;</a><br><a class="trace-frames" data-frame-id="4" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:72:in `identity&#39;</a><br><a class="trace-frames" data-frame-id="5" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:57:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="6" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:135:in `with_optimization&#39;</a><br><a class="trace-frames" data-frame-id="7" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/router.rb:56:in `call&#39;</a><br><a class="trace-frames" data-frame-id="8" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:119:in `call&#39;</a><br><a class="trace-frames" data-frame-id="9" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:45:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="10" href="#">vendor/bundles/ruby/2.3.0/gems/grape-1.0.0/lib/grape/api.rb:40:in `call&#39;</a><br><a class="trace-frames" data-frame-id="11" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/mapper.rb:51:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="12" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:43:in `block in serve&#39;</a><br><a class="trace-frames" data-frame-id="13" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:30:in `each&#39;</a><br><a class="trace-frames" data-frame-id="14" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/journey/router.rb:30:in `serve&#39;</a><br><a class="trace-frames" data-frame-id="15" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/route_set.rb:817:in `call&#39;</a><br><a class="trace-frames" data-frame-id="16" href="#">vendor/bundles/ruby/2.3.0/gems/rack-pjax-1.0.0/lib/rack/pjax.rb:12:in `call&#39;</a><br><a class="trace-frames" data-frame-id="17" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/flash.rb:260:in `call&#39;</a><br><a class="trace-frames" data-frame-id="18" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:189:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="19" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:167:in `call&#39;</a><br><a class="trace-frames" data-frame-id="20" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:189:in `call!&#39;</a><br><a class="trace-frames" data-frame-id="21" href="#">vendor/bundles/ruby/2.3.0/gems/omniauth-1.6.1/lib/omniauth/strategy.rb:167:in `call&#39;</a><br><a class="trace-frames" data-frame-id="22" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:36:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="23" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:35:in `catch&#39;</a><br><a class="trace-frames" data-frame-id="24" href="#">vendor/bundles/ruby/2.3.0/gems/warden-1.2.7/lib/warden/manager.rb:35:in `call&#39;</a><br><a class="trace-frames" data-frame-id="25" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/etag.rb:24:in `call&#39;</a><br><a class="trace-frames" data-frame-id="26" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/conditionalget.rb:25:in `call&#39;</a><br><a class="trace-frames" data-frame-id="27" href="#">vendor/bundles/ruby/2.3.0/gems/rack-user_agent-0.5.2/lib/rack/user_agent.rb:16:in `call&#39;</a><br><a class="trace-frames" data-frame-id="28" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/head.rb:13:in `call&#39;</a><br><a class="trace-frames" data-frame-id="29" href="#">vendor/bundles/ruby/2.3.0/gems/remotipart-1.3.1/lib/remotipart/middleware.rb:32:in `call&#39;</a><br><a class="trace-frames" data-frame-id="30" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/params_parser.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="31" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/flash.rb:260:in `call&#39;</a><br><a class="trace-frames" data-frame-id="32" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/session/abstract/id.rb:225:in `context&#39;</a><br><a class="trace-frames" data-frame-id="33" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/session/abstract/id.rb:220:in `call&#39;</a><br><a class="trace-frames" data-frame-id="34" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/cookies.rb:560:in `call&#39;</a><br><a class="trace-frames" data-frame-id="35" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/query_cache.rb:36:in `call&#39;</a><br><a class="trace-frames" data-frame-id="36" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/connection_adapters/abstract/connection_pool.rb:653:in `call&#39;</a><br><a class="trace-frames" data-frame-id="37" href="#">vendor/bundles/ruby/2.3.0/gems/activerecord-4.2.6/lib/active_record/migration.rb:377:in `call&#39;</a><br><a class="trace-frames" data-frame-id="38" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/callbacks.rb:29:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="39" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:88:in `__run_callbacks__&#39;</a><br><a class="trace-frames" data-frame-id="40" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:778:in `_run_call_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="41" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/callbacks.rb:81:in `run_callbacks&#39;</a><br><a class="trace-frames" data-frame-id="42" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/callbacks.rb:27:in `call&#39;</a><br><a class="trace-frames" data-frame-id="43" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/reloader.rb:73:in `call&#39;</a><br><a class="trace-frames" data-frame-id="44" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/remote_ip.rb:78:in `call&#39;</a><br><a class="trace-frames" data-frame-id="45" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call&#39;</a><br><a class="trace-frames" data-frame-id="46" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call&#39;</a><br><a class="trace-frames" data-frame-id="47" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:38:in `call_app&#39;</a><br><a class="trace-frames" data-frame-id="48" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:20:in `block in call&#39;</a><br><a class="trace-frames" data-frame-id="49" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:68:in `block in tagged&#39;</a><br><a class="trace-frames" data-frame-id="50" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:26:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="51" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/tagged_logging.rb:68:in `tagged&#39;</a><br><a class="trace-frames" data-frame-id="52" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/rack/logger.rb:20:in `call&#39;</a><br><a class="trace-frames" data-frame-id="53" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/request_id.rb:21:in `call&#39;</a><br><a class="trace-frames" data-frame-id="54" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/methodoverride.rb:22:in `call&#39;</a><br><a class="trace-frames" data-frame-id="55" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/runtime.rb:18:in `call&#39;</a><br><a class="trace-frames" data-frame-id="56" href="#">vendor/bundles/ruby/2.3.0/gems/activesupport-4.2.6/lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call&#39;</a><br><a class="trace-frames" data-frame-id="57" href="#">vendor/bundles/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/middleware/static.rb:120:in `call&#39;</a><br><a class="trace-frames" data-frame-id="58" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/sendfile.rb:113:in `call&#39;</a><br><a class="trace-frames" data-frame-id="59" href="#">vendor/bundles/ruby/2.3.0/gems/rack-mini-profiler-0.10.5/lib/mini_profiler/profiler.rb:282:in `call&#39;</a><br><a class="trace-frames" data-frame-id="60" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/engine.rb:518:in `call&#39;</a><br><a class="trace-frames" data-frame-id="61" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/application.rb:165:in `call&#39;</a><br><a class="trace-frames" data-frame-id="62" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/content_length.rb:15:in `call&#39;</a><br><a class="trace-frames" data-frame-id="63" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:86:in `block in pre_process&#39;</a><br><a class="trace-frames" data-frame-id="64" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:84:in `catch&#39;</a><br><a class="trace-frames" data-frame-id="65" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:84:in `pre_process&#39;</a><br><a class="trace-frames" data-frame-id="66" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:53:in `process&#39;</a><br><a class="trace-frames" data-frame-id="67" href="#">vendor/bundles/ruby/2.3.0/gems/faye-websocket-0.10.0/lib/faye/adapters/thin.rb:40:in `process&#39;</a><br><a class="trace-frames" data-frame-id="68" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/connection.rb:39:in `receive_data&#39;</a><br><a class="trace-frames" data-frame-id="69" href="#">vendor/bundles/ruby/2.3.0/gems/faye-websocket-0.10.0/lib/faye/adapters/thin.rb:44:in `receive_data&#39;</a><br><a class="trace-frames" data-frame-id="70" href="#">vendor/bundles/ruby/2.3.0/gems/eventmachine-1.2.3/lib/eventmachine.rb:194:in `run_machine&#39;</a><br><a class="trace-frames" data-frame-id="71" href="#">vendor/bundles/ruby/2.3.0/gems/eventmachine-1.2.3/lib/eventmachine.rb:194:in `run&#39;</a><br><a class="trace-frames" data-frame-id="72" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/backends/base.rb:73:in `start&#39;</a><br><a class="trace-frames" data-frame-id="73" href="#">vendor/bundles/ruby/2.3.0/gems/thin-1.7.1/lib/thin/server.rb:162:in `start&#39;</a><br><a class="trace-frames" data-frame-id="74" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/handler/thin.rb:19:in `run&#39;</a><br><a class="trace-frames" data-frame-id="75" href="#">vendor/bundles/ruby/2.3.0/gems/rack-1.6.8/lib/rack/server.rb:287:in `start&#39;</a><br><a class="trace-frames" data-frame-id="76" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/server.rb:80:in `start&#39;</a><br><a class="trace-frames" data-frame-id="77" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:80:in `block in server&#39;</a><br><a class="trace-frames" data-frame-id="78" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:75:in `tap&#39;</a><br><a class="trace-frames" data-frame-id="79" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:75:in `server&#39;</a><br><a class="trace-frames" data-frame-id="80" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands/commands_tasks.rb:39:in `run_command!&#39;</a><br><a class="trace-frames" data-frame-id="81" href="#">vendor/bundles/ruby/2.3.0/gems/railties-4.2.6/lib/rails/commands.rb:17:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="82" href="#">bin/rails:9:in `require&#39;</a><br><a class="trace-frames" data-frame-id="83" href="#">bin/rails:9:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="84" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:74:in `load&#39;</a><br><a class="trace-frames" data-frame-id="85" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:74:in `kernel_load&#39;</a><br><a class="trace-frames" data-frame-id="86" href="#">bundler (1.15.1) lib/bundler/cli/exec.rb:27:in `run&#39;</a><br><a class="trace-frames" data-frame-id="87" href="#">bundler (1.15.1) lib/bundler/cli.rb:360:in `exec&#39;</a><br><a class="trace-frames" data-frame-id="88" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run&#39;</a><br><a class="trace-frames" data-frame-id="89" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command&#39;</a><br><a class="trace-frames" data-frame-id="90" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor.rb:369:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="91" href="#">bundler (1.15.1) lib/bundler/cli.rb:20:in `dispatch&#39;</a><br><a class="trace-frames" data-frame-id="92" href="#">bundler (1.15.1) lib/bundler/vendor/thor/lib/thor/base.rb:444:in `start&#39;</a><br><a class="trace-frames" data-frame-id="93" href="#">bundler (1.15.1) lib/bundler/cli.rb:10:in `start&#39;</a><br><a class="trace-frames" data-frame-id="94" href="#">bundler (1.15.1) exe/bundle:35:in `block in &lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="95" href="#">bundler (1.15.1) lib/bundler/friendly_errors.rb:121:in `with_friendly_errors&#39;</a><br><a class="trace-frames" data-frame-id="96" href="#">bundler (1.15.1) exe/bundle:27:in `&lt;top (required)&gt;&#39;</a><br><a class="trace-frames" data-frame-id="97" href="#">/home/vagrant/.rbenv/versions/2.3.1/bin/bundle:23:in `load&#39;</a><br><a class="trace-frames" data-frame-id="98" href="#">/home/vagrant/.rbenv/versions/2.3.1/bin/bundle:23:in `&lt;main&gt;&#39;</a><br></code></pre>
    </div>

  <script type="text/javascript">
    var traceFrames = document.getElementsByClassName('trace-frames');
    var selectedFrame, currentSource = document.getElementById('frame-source-0');

    // Add click listeners for all stack frames
    for (var i = 0; i < traceFrames.length; i++) {
      traceFrames[i].addEventListener('click', function(e) {
        e.preventDefault();
        var target = e.target;
        var frame_id = target.dataset.frameId;

        if (selectedFrame) {
          selectedFrame.className = selectedFrame.className.replace("selected", "");
        }

        target.className += " selected";
        selectedFrame = target;

        // Change the extracted source code
        changeSourceExtract(frame_id);
      });

      function changeSourceExtract(frame_id) {
        var el = document.getElementById('frame-source-' + frame_id);
        if (currentSource && el) {
          currentSource.className += " hidden";
          el.className = el.className.replace(" hidden", "");
          currentSource = el;
        }
      }
    }
  </script>
</div>

  

<h2 style="margin-top: 30px">Request</h2>
<p><b>Parameters</b>:</p> <pre>None</pre>

<div class="details">
  <div class="summary"><a href="#" onclick="return toggleSessionDump()">Toggle session dump</a></div>
  <div id="session_dump" style="display:none"><pre></pre></div>
</div>

<div class="details">
  <div class="summary"><a href="#" onclick="return toggleEnvDump()">Toggle env dump</a></div>
  <div id="env_dump" style="display:none"><pre>GATEWAY_INTERFACE: &quot;CGI/1.2&quot;
HTTP_ACCEPT: &quot;*/*&quot;
REMOTE_ADDR: &quot;192.168.33.10&quot;
SERVER_NAME: &quot;192.168.33.10&quot;
SERVER_PROTOCOL: &quot;HTTP/1.1&quot;</pre></div>
</div>

<h2 style="margin-top: 30px">Response</h2>
<p><b>Headers</b>:</p> <pre>None</pre>

</div>


</body>
</html>
